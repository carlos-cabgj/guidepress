{"version":3,"sources":["components/header/MainHeader.jsx","components/cards/ItemCardStyle.jsx","components/cards/CardSource.jsx","components/cards/CardSourceSetModal.jsx","services/Content/File.js","services/Content/Rss.js","components/cards/CardSourceUpModal.jsx","components/download/SourceContents.jsx","services/Ai/TfIdf.js","components/panel/CalcPanel.jsx","entities/EntityAbstract.jsx","entities/SourceEntity.js","components/panel/ConfigPanel.jsx","components/panel/TokenizacaoPanel.jsx","components/panel/FilteringAndSetPanel.jsx","pages/index/Home.jsx","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","grow","flexGrow","menuButton","marginRight","spacing","title","display","breakpoints","up","search","position","borderRadius","shape","backgroundColor","alpha","palette","common","white","marginLeft","width","searchIcon","padding","height","pointerEvents","alignItems","justifyContent","inputRoot","color","inputInput","paddingLeft","transition","transitions","create","sectionDesktop","sectionMobile","MainHeader","classes","React","useState","anchorEl","setAnchorEl","mobileMoreAnchorEl","setMobileMoreAnchorEl","isMenuOpen","Boolean","isMobileMenuOpen","handleMobileMenuClose","handleMenuClose","renderMenu","Menu","anchorOrigin","vertical","horizontal","id","keepMounted","transformOrigin","open","onClose","MenuItem","onClick","mobileMenuId","renderMobileMenu","IconButton","Badge","badgeContent","event","currentTarget","className","AppBar","Toolbar","Typography","variant","noWrap","ItemCardStyle","root","maxWidth","margin","imgChange","IOSSwitch","withStyles","switchBase","transform","opacity","border","thumb","track","grey","checked","focusVisible","props","Switch","focusVisibleClassName","disableRipple","CardSource","indice","sourceObj","handleOpenModal","handleOpenSetModal","handleUpdCard","item","setItem","useEffect","Card","CardContent","CardActionArea","component","get","ListItem","divider","Icon","style","fontSize","Button","Grid","container","xs","md","sm","moment","format","FormControlLabel","control","onChange","key","value","newItem","set","handleUpdConfig","target","name","label","modal","paper","background","boxShadow","shadows","CardSourceSetModal","statusModal","handleDownloadCard","handleDeleteCard","handleClose","setOpen","Modal","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","sendDownload","data","a","element","document","createElement","textFile","Blob","JSON","stringify","type","href","URL","createObjectURL","download","body","appendChild","click","getFeeds","inputFeed","feed","Axios","response","author","image","items","Date","getTime","CardSourceUpModal","rssLink","setTextRssLink","downloadFormat1","loadRssButton","Source","stripAllArray","array","replace","trim","noValidate","autoComplete","TextField","e","fullWidth","files","file","date","reader","FileReader","onload","contents","result","Parser","parseString","opc","rssParsed","d","description","getFullYear","getMonth","getDay","getHours","thumbColor","category","url","readAsText","loadFileRssContent","json","parse","loadCardContent","alert","gutterBottom","SourceContents","cardsInput","setCardsInput","openModalUpSource","setOpenModalUpSource","openModalSetSource","setOpenModalSetSource","indiceAtivo","setIndiceAtivo","newCards","splice","attrs","$item","handleOpenModalUpSource","map","card","index","fill","calcTfIDFFromTfCard","dataTreated","forEach","cardIndex","newResults","dataSet","push","term","results","posItem","pubDate","extractTfAllDocuments","configToken","propertyChoosed","i","termsCaseTreated","makeTokens","calcTf","addTermsToDictionary","terms","dictionary","words","tf","wordsLength","Object","keys","length","defineIdf","tfResults","wordsPerText","idf","qtdTexts","Math","log","args","text","fieldDatawithoutInvisible","fieldData","textCase","minLength","ngrams","choosedFieldFiltered","expression","RegExp","termsSplited","split","toLowerCase","toUpperCase","dataWithNgrams","applyNgrams","finalData","applyStopWords","stopWords","arrayOfSplitedData","filter","newArray","newString","colorsHourPie","CalcPanel","configFilter","tfIdf","setTfIdf","plotDataWeek","setPlotDataWeek","plotDataHours","setPlotDataHours","plotDataAll","setPlotDataAll","plotDataPosttTime","setPlotDataPostTime","countWordsGenerated","setWordsGenerated","countWordsUsed","setWordsUsed","countDocuments","setCountDocuments","countFonts","setCountFonts","limitCount","similarityList","setSimilarityList","selectedWeek","calcAll","counts","selectedAll","selectedHours","selectedPostsTime","cardTfIdf","sort","b","slicedResults","slice","concat","day","hour","selectedAllWihtoutDuplicates","pos","arrayContent","similarity","compareSources","calcMagnitudeVector","vector","sqrt","reduce","acumulator","choosedSource","vectorFormat","cardChoosed","cardsToCompare","formatToDecript","cardsToCompareVector","idCard","docsWithVector","newVector","formatDocumentsWithVectors","unique","getVectorFormat","choosed","magnitude","vectorToCompare","listResults","itemChoosed","listFirstResult","vector1","magnitude1","vector2","product","vector1Item","indexVector1","magnitude2","calcCosSimilarity","mean","cards","targetField","dataCard","calcTfIdfCards","axis_x","axis_y","dataToPlot","x","y","mode","marker","randomColor","useResizeHandler","layout","showComparison","obj","values","reverse","ksort","labels","hole","textinfo","textposition","automargin","colors","showlegend","plotPostTime","plotTfIdfByAll","months","daysColors","itemDay","luminosity","hue","barmode","bargap","bargroupgap","plotTfIdfByWeek","indexDay","seed","config","responsive","xaxis","tickangle","line","yaxis","zeroline","plotTfIdfByHours","EntityAbstract","this","Component","SourceEntity","uuidv4","active","created","status","ConfigPanel","configInput","setConfigFilterCallback","setCardsSourceCallback","setConfigTokenCallback","setConfig","fileInfo","setFileData","qtdColsInfo","fillFileInfo","size","newConfig","loadFileConfig","sendBackUpToDownload","console","generateBackUpData","cardsData","rssHostDownload1","defaultValue","rssHostParam1","filesLimit","dropzoneText","showPreviews","acceptedFiles","showPreviewsInDropzone","align","Fragment","labelUp","typography","button","formControl","minWidth","selectEmpty","marginTop","TokenizacaoPanel","callbackLoadData","intl","useIntl","configs","setConfigs","newConfigs","inputProps","form","autocomplete","FormControl","Select","native","case","formatMessage","FilteringAndSetPanel","cardsSource","checkedTypes","setCheckedTypes","handleTypeCheck","newTypes","utils","DateFnsUtils","locale","ptLocale","DateTimePicker","clearable","inputVariant","minDate","maxDate","types","Checkbox","renderSelectTypes","minItemPerCard","inputMode","pattern","parseInt","minCharsPerItem","options","targetCardForComparison","renderSimilarityCheck","Home","setCardsSource","setConfigFilter","setConfigToken","objCollection","Divider","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","navigator","language","ReactDOM","render","StrictMode","messages","lang_pt_BR","getElementById"],"mappings":"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","file":"static/js/main.e8c66176.chunk.js","sourcesContent":["import React from 'react';\nimport { alpha, makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport Badge from '@material-ui/core/Badge';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport MailIcon from '@material-ui/icons/Mail';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport MoreIcon from '@material-ui/icons/MoreVert';\n\nconst useStyles = makeStyles((theme) => ({\n  grow: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n    },\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: alpha(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: alpha(theme.palette.common.white, 0.25),\n    },\n    marginRight: theme.spacing(2),\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(3),\n      width: 'auto',\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'inherit',\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('md')]: {\n      width: '20ch',\n    },\n  },\n  sectionDesktop: {\n    display: 'none',\n    [theme.breakpoints.up('md')]: {\n      display: 'flex',\n    },\n  },\n  sectionMobile: {\n    display: 'flex',\n    [theme.breakpoints.up('md')]: {\n      display: 'none',\n    },\n  },\n}));\n\nexport default function MainHeader() {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\n\n  const isMenuOpen = Boolean(anchorEl);\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n\n  const handleProfileMenuOpen = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleMobileMenuClose = () => {\n    setMobileMoreAnchorEl(null);\n  };\n\n  const handleMenuClose = () => {\n    setAnchorEl(null);\n    handleMobileMenuClose();\n  };\n\n  const handleMobileMenuOpen = (event) => {\n    setMobileMoreAnchorEl(event.currentTarget);\n  };\n\n  const menuId = 'primary-search-account-menu';\n  const renderMenu = (\n    <Menu\n      anchorEl={anchorEl}\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      id={menuId}\n      keepMounted\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      open={isMenuOpen}\n      onClose={handleMenuClose}\n    >\n      <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\n      <MenuItem onClick={handleMenuClose}>My account</MenuItem>\n    </Menu>\n  );\n\n  const mobileMenuId = 'primary-search-account-menu-mobile';\n  const renderMobileMenu = (\n    <Menu\n      anchorEl={mobileMoreAnchorEl}\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      id={mobileMenuId}\n      keepMounted\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      open={isMobileMenuOpen}\n      onClose={handleMobileMenuClose}\n    >\n      <MenuItem>\n        <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n          <Badge badgeContent={4} color=\"secondary\">\n            <MailIcon />\n          </Badge>\n        </IconButton>\n        <p>Messages</p>\n      </MenuItem>\n      <MenuItem>\n        <IconButton aria-label=\"show 11 new notifications\" color=\"inherit\">\n          <Badge badgeContent={11} color=\"secondary\">\n            <NotificationsIcon />\n          </Badge>\n        </IconButton>\n        <p>Notifications</p>\n      </MenuItem>\n      <MenuItem onClick={handleProfileMenuOpen}>\n        <IconButton\n          aria-label=\"account of current user\"\n          aria-controls=\"primary-search-account-menu\"\n          aria-haspopup=\"true\"\n          color=\"inherit\"\n        >\n          <AccountCircle />\n        </IconButton>\n        <p>Profile</p>\n      </MenuItem>\n    </Menu>\n  );\n\n  return (\n    <div className={classes.grow}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography className={classes.title} variant=\"h6\" noWrap>\n            GuidePress\n          </Typography>\n\n          <div className={classes.grow} />\n          <div className={classes.sectionDesktop}>\n          </div>\n          <div className={classes.sectionMobile}>\n            <IconButton\n              aria-label=\"show more\"\n              aria-controls={mobileMenuId}\n              aria-haspopup=\"true\"\n              onClick={handleMobileMenuOpen}\n              color=\"inherit\"\n            >\n              <MoreIcon />\n            </IconButton>\n          </div>\n        </Toolbar>\n      </AppBar>\n      {renderMobileMenu}\n      {renderMenu}\n    </div>\n  );\n}","function ItemCardStyle(theme) {\n    return {\n        root: {\n            maxWidth: 295,\n            margin: 20,\n        },\n        imgChange: {\n            'object-fit' : 'contain',\n        },\n    }\n}\n\nexport default ItemCardStyle;","import React, {useEffect} from \"react\";\nimport {\n  Card, \n  CardActionArea, \n  CardContent, \n  Grid, \n  ListItem, \n  Switch,\n  withStyles,\n  makeStyles\n} from \"@material-ui/core\";\nimport Icon from '@material-ui/core/Icon';\n\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from '@material-ui/core/Button';\nimport moment from 'moment'\nimport ItemCardStyle from './ItemCardStyle.jsx';\nimport {FormattedMessage} from 'react-intl';\n\n\nconst useStyles = makeStyles((theme) => (ItemCardStyle(theme)));\n\nconst IOSSwitch = withStyles((theme) => ({\n  root: {\n    width: 42,\n    height: 26,\n    padding: 0,\n    margin: theme.spacing(1),\n  },\n  switchBase: {\n    padding: 1,\n    '&$checked': {\n      transform: 'translateX(16px)',\n      color: theme.palette.common.white,\n      '& + $track': {\n        backgroundColor: '#52d869',\n        opacity: 1,\n        border: 'none',\n      },\n    },\n    '&$focusVisible $thumb': {\n      color: '#52d869',\n      border: '6px solid #fff',\n    },\n  },\n  thumb: {\n    width: 24,\n    height: 24,\n  },\n  track: {\n    borderRadius: 26 / 2,\n    border: `1px solid ${theme.palette.grey[400]}`,\n    backgroundColor: theme.palette.grey[50],\n    opacity: 1,\n    transition: theme.transitions.create(['background-color', 'border']),\n  },\n  checked: {},\n  focusVisible: {},\n}))(({ classes, ...props }) => {\n  return (\n    <Switch\n      focusVisibleClassName={classes.focusVisible}\n      disableRipple\n      classes={{\n        root: classes.root,\n        switchBase: classes.switchBase,\n        thumb: classes.thumb,\n        track: classes.track,\n        checked: classes.checked,\n      }}\n      {...props}\n    />\n  );\n});\n\nexport default function CardSource({ \n  indice, \n  sourceObj, \n  handleOpenModal, \n  handleOpenSetModal, \n  handleUpdCard \n}) {\n\n\n  const classes = useStyles();\n  const [item, setItem] = React.useState(sourceObj);\n\n  useEffect(() => {\n    setItem(sourceObj)\n  }, [sourceObj] )\n\n  const handleCardOptions = (event) => {\n    handleOpenSetModal(indice);\n  }\n\n  const handleUpdConfig = (key, value) => {\n    let newItem = item;\n    if(key === 'active'){\n      newItem.set(key, !newItem.get('active'));\n    }else{\n      newItem.set(key, value);\n    }\n    handleUpdCard(indice, newItem);\n  }\n\n  return (\n    <Card className={classes.root} display=\"inline\">\n      <CardContent>\n        <CardActionArea onClick={handleCardOptions}>\n          <Typography variant=\"body2\" color=\"initial\" component=\"p\">\n            {item.get('name')} \n            <br/>\n            {item.get('id')}\n          </Typography>\n          <ListItem divider key={'div1'} />\n          <br />\n          <div className={classes.imgChange}>\n            <Icon style={{ fontSize: 100, color : item.get('thumbColor')}}>\n              {item.get('thumb')}\n            </Icon>\n          </div>\n\n        </CardActionArea>\n\n        <Button variant=\"contained\" onClick={() => handleOpenModal(indice)} color=\"secondary\">\n          <FormattedMessage id=\"app.addContent\"/>\n        </Button>\n\n        <Typography variant=\"body2\" color=\"initial\" component=\"p\">\n          <FormattedMessage id=\"app.description\"/>\n        </Typography>\n\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n          {item.get('description')}\n        </Typography>\n\n        <br />\n\n        <Grid container spacing={0}>\n          <Grid item xs={6} md={6} sm={6}>\n            <Typography variant=\"body2\" color=\"initial\" component=\"span\">\n              <b><FormattedMessage id=\"app.Status\"/></b>:\n            </Typography>\n            <Typography variant=\"body2\" color=\"error\" component=\"span\">\n              {item.get('status')}\n            </Typography>\n          </Grid>\n          <Grid item xs={6} md={6} sm={6}>\n            <Typography variant=\"body2\" color=\"initial\" component=\"span\">\n              <b><FormattedMessage id=\"app.Date\"/></b>:\n            </Typography>\n            <Typography variant=\"body2\" color=\"error\" component=\"span\">\n              {moment(item.get('vinculacao')).format('DD/MM/Y')}\n            </Typography>\n          </Grid>\n          <Grid item xs={6} md={6} sm={6}>\n            {item.get('status') !== 'new' ? <FormControlLabel\n              control={\n                <IOSSwitch \n                checked={item.get('active')}\n                onChange={(event) => handleUpdConfig('active', event.target.value)}\n                name=\"checkedB\" />\n              }\n              label={'ativar'}\n            /> :\n              <b></b>\n            }\n          </Grid>\n        </Grid>\n    </CardContent>\n    </Card>\n  )\n}","\nimport React, { useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {Button} from \"@material-ui/core\";\nimport Modal from '@material-ui/core/Modal';\nimport Fade from '@material-ui/core/Fade';\nimport Backdrop from '@material-ui/core/Backdrop';\n\nconst useStyles = makeStyles((theme) => ({\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n}));\n\nexport default function CardSourceSetModal({\n  statusModal, \n  handleDownloadCard, \n  handleDeleteCard,\n  handleClose\n}) {\n\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n\n  useEffect(()=>{\n    setOpen(statusModal)\n  },[statusModal])\n\n  return (\n    <div>\n      <Modal\n        aria-labelledby=\"transition-modal-title\"\n        aria-describedby=\"transition-modal-description\"\n        className={classes.modal}\n        open={open}\n        onClose={handleClose}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500,\n        }}\n      >\n        <Fade in={open}>\n          <div className={classes.paper}>\n            <Button variant=\"contained\" onClick={handleDownloadCard} color=\"secondary\">\n              {/* <FormattedMessage id=\"app.addContent\"/> */}\n              Download\n            </Button>\n            <Button variant=\"contained\" onClick={handleDeleteCard}>\n              {/* <FormattedMessage id=\"app.addContent\"/> */}\n              Excluir Card\n            </Button>\n          </div>\n        </Fade>\n      </Modal>\n    </div>\n  );\n}","export const sendDownload = async (name, data) => {\n\n    const element = document.createElement(\"a\");\n\n    const textFile = new Blob([\n      JSON.stringify(data)\n    ], {type: 'text/plain'}); \n\n    element.href = URL.createObjectURL(textFile);\n    element.download = name;\n    document.body.appendChild(element); \n    element.click();\n}","import Axios from 'axios'\n// import {feeds} from '../../dataG1.js';\n\nexport const getFeeds = async (inputFeed) => {\n\n  // return feeds;\n  let feed = {};\n\n  let response =  await Axios.get(\"https://api.rss2json.com/v1/api.json?rss_url=\" + inputFeed);\n\n  feed[\"author\"]  = response?.data?.author || response?.data?.feed?.author;\n  feed[\"image\"]   = response?.data?.image || response?.data?.feed?.image;\n  feed[\"title\"]   = response?.data?.title || response?.data?.feed?.title;\n  feed[\"items\"]   = response?.data?.items || response?.data?.items;\n  feed[\"created\"] = new Date().getTime();\n  feed[\"url\"]     = inputFeed;\n\n  return feed;\n}","import React, { useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {TextField, Grid, Typography} from \"@material-ui/core\";\nimport Button from '@material-ui/core/Button';\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\nimport {DropzoneArea} from 'material-ui-dropzone'\nimport {sendDownload} from '../../services/Content/File';\nimport Parser from 'rss-parser';\n\n\nimport {getFeeds} from '../../services/Content/Rss';\n\n// const RSS_URL = 'https://g1.globo.com/rss/g1/pop-arte/';\n// const RSS_URL = 'http://noticias.r7.com/economia/feed.xml';\nconst RSS_URL = '';\n\nconst useStyles = makeStyles((theme) => ({\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n}));\n\nexport default function CardSourceUpModal({statusModal, handleClose}) {\n  const classes = useStyles();\n\n  const [open, setOpen] = React.useState(false);\n  const [rssLink, setTextRssLink] = React.useState(RSS_URL);\n\n  const handleRssText = (e) => {\n    setTextRssLink(e.target.value);\n  }\n\n  const downloadFormat1 = async() => {\n    const format = {\"cards\":[{\"id\":\"...\",\"name\":\"...\",\"author\":\"...\",\"thumb\":\"...\",\"image\":\"...\",\"url\":\"...\",\"description\":\"....\",\"category\":\"...\",\"active\":true,\"items\":[{\"title\":\"...\",\"pubDate\":\"2021-07-01 17:55:26\",\"link\":\"\",\"author\":\"\",\"thumbnail\":\"\"}]}]};\n    await sendDownload('card-format1.json', format);\n  }\n\n  const loadRssButton = async () => {\n    let Source = await getFeeds(rssLink);\n\n    Source['thumb'] = 'leak_add';\n    Source['thumbColor'] = 'orange';\n    Source['name'] = 'Rss';\n\n    handleClose('rss', Source);\n  }\n\n  const loadFileRssContent = (file) => {\n    const reader = new FileReader()\n    reader.onload = async (e) => { \n      const contents = e.target.result;\n\n      let parser = new Parser();\n\n      parser.parseString(contents, function(opc, rssParsed){\n        const d = new Date();\n        const data = {\n          items : stripAllArray(rssParsed['items']),\n          thumb      : 'leak_add',\n          description: 'Extracted : '+\n            d.getFullYear()+'-'+d.getMonth()+'-'+d.getDay()+'-'+d.getHours(),\n          name       : rssParsed['title'],\n          thumbColor : 'red',\n          category   : 'rss',\n          url        : rssParsed['feedUrl'],\n        };\n        handleClose('rss', data)\n      })\n\n    };\n    reader.readAsText(file)\n  }\n\n  const stripAllArray = (array) => {\n\n    for(let a in array){\n\n      let type = typeof array[a];\n\n      if(type === 'object'){\n        array[a] = stripAllArray(array[a])\n      }else if(typeof array[a] ===  'string'){\n        array[a] = array[a].replace(/(<([^>]+)>)/gi, \"\").trim(); \n      }\n    }\n    return array;\n  }\n\n  const loadCardContent = (file) => {\n      const reader = new FileReader()\n      reader.onload = async (e) => { \n        const json = JSON.parse(e.target.result);\n        json['thumb'] = 'archive';\n        json['thumbColor'] = 'blue';\n        json['category'] = 'card';\n\n        handleClose('card', json)\n      };\n      reader.readAsText(file)\n  }\n\n  const handleChange = (files) => {\n\n    if(files[0]){\n      let file     = files[0];\n      file.date    = new Date();\n\n      switch (file.type) {\n        case 'text/xml':\n          loadFileRssContent(file);\n          break;\n        case 'application/json':\n          loadCardContent(file);\n          break;\n        default:\n          alert('Formato não permitido')\n      }\n    }\n  }\n\n  useEffect(()=>{\n    setOpen(statusModal)\n  },[statusModal])\n\n  return (\n    <div>\n      <Modal\n        aria-labelledby=\"transition-modal-title\"\n        aria-describedby=\"transition-modal-description\"\n        className={classes.modal}\n        open={open}\n        onClose={() => handleClose(false)}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500,\n        }}\n      >\n        <Fade in={open}>\n          <div className={classes.paper}>\n            <form className={classes.root} noValidate autoComplete=\"off\">\n              <Grid container spacing={1}>\n                <Grid item xs={10} md={10}>\n                  <TextField \n                    onChange={handleRssText} \n                    id=\"standard-basic\" \n                    label=\"Link Rss\" \n                    fullWidth\n                    value={rssLink}/>\n                </Grid>\n                <Grid xs={2} md={2} item>\n                  <br/>\n                  <Button  onClick={loadRssButton} variant=\"contained\">\n                    Adicionar\n                  </Button>\n                </Grid>\n              </Grid>\n            </form>\n            <Typography variant=\"h5\" component=\"h2\">\n              <center>Ou</center>\n            </Typography>\n            <Typography variant=\"h5\" component=\"h2\">\n              adicione um arquivo abaixo no formato correto abaixo \n            </Typography>\n            <DropzoneArea\n              onChange={handleChange}\n            />\n            <p></p>\n            {/* <Typography variant=\"body2\" gutterBottom>\n              <i>arquivo txt com conteúdo para importar um documento só</i>\n            </Typography> */}\n            <Typography variant=\"body2\" gutterBottom>\n              <Button onClick={downloadFormat1} variant=\"outlined\" color=\"secondary\">\n                <b>* Formato 2 </b>\n              </Button>\n              <i>\n                Para importar um card completo\n              </i>\n            </Typography>\n          </div>\n        </Fade>\n      </Modal>\n    </div>\n  );\n}","import React from \"react\";\nimport {\n    Grid,\n} from \"@material-ui/core\";\n\nimport Typography from \"@material-ui/core/Typography\";\nimport {FormattedMessage} from 'react-intl';\n\nimport CardSource from '../cards/CardSource.jsx';\nimport CardSourceSetModal from '../cards/CardSourceSetModal.jsx';\nimport CardSourceUpModal from '../cards/CardSourceUpModal.jsx';\nimport {sendDownload} from '../../services/Content/File';\n\nexport default function SourceContents({cardsInput, setCardsInput}) {\n\n  const [openModalUpSource, setOpenModalUpSource]   = React.useState(false);\n  const [openModalSetSource, setOpenModalSetSource]   = React.useState(false);\n  const [indiceAtivo, setIndiceAtivo]           = React.useState(0);\n\n  const handleDeleteCard = async () => {\n    let newCards = [...cardsInput];\n    newCards.splice(0, 1);\n    setCardsInput(newCards)\n    setOpenModalSetSource(false);\n  }\n\n  const handleDownloadCard = async () => {\n    await sendDownload('card-format1.json', cardsInput[indiceAtivo].attrs);\n  }\n\n  const handleCloseModalUpSource = (type, data) => {\n\n    if(!type){\n      setOpenModalUpSource(false);\n      return false;\n    }\n    let newCards = cardsInput;\n\n    data['category'] = type;\n    data['status'] = 'active';\n    data['active'] = true;\n\n    newCards[indiceAtivo].fill(data);\n\n    setCardsInput(newCards);\n    setOpenModalUpSource(false);\n  };\n\n  const handleUpdCard = (indice, $item) => {\n    let newCards = [...cardsInput];\n    newCards[indice] = $item;\n    setCardsInput(newCards);\n  };\n\n  const handleOpenModalUpSource = (indice) => {\n    setIndiceAtivo(indice)\n    setOpenModalUpSource(true);\n  };\n\n  const handleOpenSetModal = (indice) => {\n    setIndiceAtivo(indice)\n    setOpenModalSetSource(true);\n  };\n\n  const handleCloseModalSetSource = (data) => {\n    setOpenModalSetSource(false);\n  }\n\n  return (\n    <div>\n      <Typography variant=\"h5\" gutterBottom>\n        <FormattedMessage id=\"app.Data\"/>\n      </Typography>\n      <br/>\n      <Grid container spacing={0}>\n        {cardsInput.map((card, index) => {\n          return (\n            <Grid item key={'CardSourcegrid-'+index}>\n              <CardSource \n               indice={index} \n               handleUpdCard={handleUpdCard} \n               handleOpenModal={handleOpenModalUpSource}\n               handleOpenSetModal={handleOpenSetModal} \n               sourceObj={card}/>\n            </Grid>\n          )\n        })}\n      </Grid>\n      <CardSourceUpModal \n        handleClose={handleCloseModalUpSource} \n        statusModal={openModalUpSource}\n      />\n      <CardSourceSetModal \n        handleClose={handleCloseModalSetSource} \n        handleDownloadCard={handleDownloadCard} \n        handleDeleteCard={handleDeleteCard} \n        statusModal={openModalSetSource}\n      />\n    </div>\n  )\n}","export function calcTfIdfCards (cards, configToken = {}, configFilter = {}) {\n\n  let results = [];\n\n  for(let a in cards){\n    if(cards[a].get('status') !== 'new' && cards[a].get('active')){\n      let tf = extractTfAllDocuments(cards[a], configToken, configFilter.targetField);\n      let dataCard = {\n        'idCard' : cards[a].get('id'),\n        'tf'  : tf,\n        'idf' : defineIdf(tf)\n      }\n      results.push(dataCard);\n    }\n  }\n\n  calcTfIDFFromTfCard(results)\n  return results;\n}\n\nfunction calcTfIDFFromTfCard(dataTreated)\n{\n  dataTreated.forEach((card, cardIndex) => {\n\n    dataTreated[cardIndex]['tf-idf'] = [];\n\n    for(let a in card['tf']){\n\n      let newResults = []\n\n      let dataSet = card['tf'][a]['results'];\n\n      for(let d in dataSet){\n        if(dataTreated[cardIndex]['idf'][d]){\n          newResults.push({\n            term : d,\n            value : dataSet[d] * dataTreated[cardIndex]['idf'][d]\n          })\n        }\n      }\n\n      dataTreated[cardIndex]['tf-idf'].push({\n        results : newResults,\n        posItem : card['tf'][a].posItem,\n        pubDate : card['tf'][a].pubDate\n      });\n    }\n  })\n}\n\nfunction extractTfAllDocuments(card, configToken, propertyChoosed)\n{\n  let items = card.get('items');\n  let results = [];\n\n  for(let i in items){\n  // \n    let termsCaseTreated = makeTokens(configToken, items[i][propertyChoosed]);\n\n    results.push({\n      'results' : calcTf(\n        addTermsToDictionary(termsCaseTreated, {}, 2)\n      ),\n      'posItem' : i,\n      'pubDate' : items[i]['pubDate'] || ''\n    })\n  }\n  return results;\n}\n\nfunction addTermsToDictionary(terms, dictionary){\n  for(let a in terms){\n\n    if(terms[a] === ''){ continue; }\n\n    if(dictionary[terms[a]]){\n      dictionary[terms[a]] = dictionary[terms[a]] + 1; \n    }else{\n      dictionary[terms[a]] = 1; \n    }\n  }\n  return dictionary;\n}\n\nfunction calcTf(words){\n  let tf = {};\n  let wordsLength = Object.keys(words).length;\n\n  for(let a in words){\n    tf[a] = words[a] / wordsLength;\n  }\n  return tf;\n}\n\nfunction defineIdf(tfResults){\n\n  let wordsPerText = {};\n  let idf = {};\n\n  let qtdTexts = Object.keys(tfResults).length;\n\n  for(let a in tfResults){\n    addTermsToDictionary(Object.keys(tfResults[a]['results']), wordsPerText)\n  }\n\n  for(let a in wordsPerText){\n    idf[a] = Math.log(qtdTexts / wordsPerText[a]);\n  }\n\n  return idf;\n}\n\nfunction makeTokens(args, text = '')\n{\n  let fieldDatawithoutInvisible = text.replace(/[\\u0000-\\u001F\\u007F-\\u009F]/g, '');\n  let fieldData = fieldDatawithoutInvisible.replace(/(<([^>]+)>)/gi, \"\").trim();\n\n  let divider   = args['divider'];\n  let textCase  = args['case'] ? args['case'] : null;\n  let minLength = args['minLength'] ? args['minLength'] : 1;\n  let ngrams    = args['ngrams'] ? args['ngrams'] : 1;\n  \n  let choosedFieldFiltered = fieldData.trim();\n  var expression           = new RegExp(divider, 'gi');\n  let termsSplited         = choosedFieldFiltered.split(expression);\n\n  termsSplited = termsSplited.map((item) => item.length < minLength ? '' : item);\n      \n  let termsCaseTreated = termsSplited.map(\n    (item) => \n      textCase === 'lower' ?\n        item.toLowerCase() : textCase === 'upper' ?\n          item.toUpperCase() : item\n  );\n\n  let dataWithNgrams = applyNgrams(termsCaseTreated, ngrams);\n\n  let finalData = !args['stopWords'] ? \n    dataWithNgrams : \n    applyStopWords(args['stopWords'].split(','), dataWithNgrams);\n\n  return finalData;\n}\n\nfunction applyStopWords(stopWords, arrayOfSplitedData){\n  return arrayOfSplitedData.filter((term) => { \n    for(let a in stopWords){\n      if(stopWords[a] == term){\n        return false;\n      }\n    }\n    return true;\n  });\n}\n\nfunction applyNgrams(arrayOfSplitedData, ngrams){\n  let newArray = [];\n  for(let a = 0; a + ngrams < arrayOfSplitedData.length; ++a){\n    let newString = '';\n    for(let i = 0; i  < ngrams; ++i){\n      newString += (i === 0 ? '' : ' ') + arrayOfSplitedData[a + i];\n    }\n    newArray.push(newString);\n  }\n  return newArray;\n}","import React, { useEffect, useState } from \"react\";\r\nimport Plot from 'react-plotly.js';\r\n\r\nimport {\r\n  Button,\r\n  Grid\r\n} from \"@material-ui/core\";\r\n\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport randomColor from \"randomcolor/randomColor\";\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { calcTfIdfCards } from '../../services/Ai/TfIdf.js';\r\n\r\nconst colorsHourPie = [\r\n  'rgb(58, 46, 125)', //1 \r\n  'rgb(90, 78, 156)', //2\r\n  'rgb(39, 13, 181)', //3\r\n  'rgb(13, 114, 181)', //4\r\n  'rgb(0, 133, 173)', //5\r\n  'rgb(11, 141, 212)', //6\r\n  'rgb(145, 212, 11)', //7\r\n  'rgb(205, 212, 11)', //8\r\n  'rgb(237, 213, 59)', //9\r\n  'rgb(255, 246, 84)', //10\r\n  'rgb(255, 237, 145)',//11\r\n  'rgb(209, 188, 77)', //12\r\n  'rgb(245, 208, 15)', //13\r\n  'rgb(252, 206, 106)', //14\r\n  'rgb(252, 204, 144)', //15\r\n  'rgb(255, 151, 23)', //16\r\n  'rgb(201, 111, 0)', //17\r\n  'rgb(201, 74, 0)', //18\r\n  'rgb(115, 27, 0)', //19\r\n  'rgb(110, 0, 35)', //20\r\n  'rgb(110, 0, 82)', //21\r\n  'rgb(110, 1, 88)', //22\r\n  'rgb(121, 2, 212)', //23\r\n  'rgb(63, 1, 110)', //00\r\n];\r\n\r\nexport default function CalcPanel({ cardsInput, configToken, configFilter}) {\r\n\r\n  const [tfIdf, setTfIdf] = useState([]);\r\n\r\n  const [plotDataWeek, setPlotDataWeek] = useState({});\r\n  const [plotDataHours, setPlotDataHours] = useState([]);\r\n  const [plotDataAll, setPlotDataAll] = useState([]);\r\n  const [plotDataPosttTime, setPlotDataPostTime] = useState([]);\r\n\r\n  const [countWordsGenerated, setWordsGenerated] = useState(0);\r\n  const [countWordsUsed, setWordsUsed] = useState(0);\r\n  const [countDocuments, setCountDocuments] = useState(0);\r\n  const [countFonts, setCountFonts] = useState(0);\r\n\r\n  const [limitCount] = useState(10);\r\n  const [similarityList, setSimilarityList] = useState('');\r\n\r\n  let selectedWeek = {\r\n    0 : [], \r\n    1 : [],\r\n    2 : [], \r\n    3 : [],\r\n    4 : [], \r\n    5 : [],\r\n    6 : [], \r\n  };\r\n\r\n  useEffect(() => {\r\n    calcAll();\r\n  }, [tfIdf] )\r\n\r\n  const execCalcs = () => {\r\n    let data = calcTfIdfCards(cardsInput, configToken, configFilter)\r\n    setTfIdf(data);\r\n  }\r\n\r\n  const showComparison = () => {\r\n\r\n    if(!similarityList){\r\n      return '';\r\n    }\r\n\r\n    let axis_x = [];\r\n    let axis_y = [];\r\n\r\n    for(let idCard in similarityList){\r\n      axis_x.push(idCard);\r\n      axis_y.push(similarityList[idCard]['mean']);\r\n    }\r\n\r\n    let dataToPlot = [\r\n      {\r\n        x : axis_x, \r\n        y : axis_y,\r\n        type: 'bar',\r\n        mode: 'lines+markers',\r\n        marker: {color: randomColor()},\r\n      }\r\n    ];\r\n    return <Grid item xs={12}>\r\n      <Plot\r\n        data={dataToPlot}\r\n        style={{width: \"100%\", height: \"100%\"}}\r\n        useResizeHandler={true}\r\n        layout={ {title: 'Fontes com conteúdo mais similaridades'} }\r\n      />\r\n    </Grid>\r\n  }\r\n\r\n  const calcAll = () => {\r\n    let counts = {\r\n      countWordsGenerated : 0,\r\n      countWordsUsed : 0,\r\n      countDocuments : 0,\r\n      countFonts : 0,\r\n    };\r\n\r\n    let selectedAll = [];\r\n    let selectedHours = [];\r\n    let selectedPostsTime = {};\r\n\r\n    tfIdf.forEach((card, cardIndex) => {\r\n      ++counts['countFonts'];\r\n\r\n      card['tf-idf'].forEach((cardTfIdf) => {\r\n        let results = cardTfIdf['results'];\r\n\r\n        ++counts['countDocuments'];\r\n        counts['countWordsGenerated'] = counts['countWordsGenerated'] + results.length;\r\n\r\n        results.sort(function(a, b){ return b['value'] - a['value'] })\r\n\r\n        let slicedResults = results.slice(0, limitCount);\r\n\r\n        slicedResults.map(item => item['dataPub'] = cardTfIdf['pubDate'])\r\n\r\n        selectedAll = selectedAll.concat(slicedResults);\r\n\r\n        let day = new Date(cardTfIdf.pubDate).getDay();\r\n        let hour = new Date(cardTfIdf.pubDate).getHours();\r\n\r\n        selectedWeek[day] = selectedWeek[day] = slicedResults; \r\n        selectedHours[hour] = selectedHours[hour] ?\r\n        selectedHours[hour].concat(slicedResults) : slicedResults\r\n\r\n        if(!selectedPostsTime[hour]){\r\n          selectedPostsTime[hour] = 0;\r\n        }  \r\n        ++selectedPostsTime[hour];\r\n      })\r\n    })\r\n\r\n    selectedAll = selectedAll.sort(function(a, b){ return a['value'] - b['value'] })\r\n    counts['countWordsUsed'] = selectedAll.length\r\n    const selectedAllWihtoutDuplicates = selectedAll.filter(function(item, pos, arrayContent){ \r\n      for(let a in arrayContent){\r\n        if(pos != a && \r\n            item.term === arrayContent[a].term && \r\n            item.value < arrayContent[a].value){\r\n          return false\r\n        }\r\n      }\r\n      return true;\r\n    })\r\n\r\n\r\n    setWordsGenerated(counts['countWordsGenerated']);\r\n    setWordsUsed(counts['countWordsUsed']);\r\n    setCountDocuments(counts['countDocuments']);\r\n    setCountFonts(counts['countFonts']);\r\n\r\n    setPlotDataPostTime(selectedPostsTime);\r\n    setPlotDataWeek(selectedWeek);\r\n    setPlotDataHours(selectedHours);\r\n    setPlotDataAll(selectedAllWihtoutDuplicates);\r\n\r\n    if(configFilter['targetCardForComparison']){\r\n      let similarity = compareSources();\r\n      setSimilarityList(similarity);\r\n    }\r\n  }\r\n\r\n  const getVectorFormat = () => {\r\n    let vectorFormat = [];\r\n    tfIdf.forEach((card, cardIndex) => {\r\n\r\n      card['tf-idf'].forEach((cardTfIdf) => {\r\n\r\n        let results = cardTfIdf['results'];\r\n\r\n        results.forEach((result) => {\r\n        \r\n          let unique = true;\r\n          vectorFormat.forEach((item) => {\r\n        \r\n            if(item['term'] === result['term'].toLowerCase()){\r\n              unique = false;\r\n            }\r\n          })\r\n\r\n          if(unique){\r\n            vectorFormat.push({'term' : result['term'].toLowerCase(), value : 0});\r\n          }\r\n        })\r\n      })\r\n    })\r\n\r\n    return vectorFormat;\r\n  }\r\n\r\n  const formatDocumentsWithVectors = (vectorFormat) => {\r\n\r\n    let cardChoosed = null;\r\n    let cardsToCompare = [];\r\n    let formatToDecript = JSON.stringify(vectorFormat); \r\n\r\n    tfIdf.forEach((card, cardIndex) => {\r\n\r\n      let cardsToCompareVector = {\r\n        idCard : card['idCard'],\r\n        docsWithVector : [],\r\n      }\r\n\r\n      card['tf-idf'].forEach((cardTfIdf) => {\r\n\r\n        let document = { \r\n          'vector' : [],\r\n          'pubDate' : cardTfIdf['pubDate'],\r\n          'postItem' : cardTfIdf['posItem']\r\n        }\r\n        let newVector = JSON.parse(formatToDecript);\r\n\r\n        cardTfIdf['results'].forEach((result) => {\r\n          newVector.forEach((item, index) => {\r\n            if(item['term'] === result['term'].toLowerCase()){\r\n              newVector[index]['value'] = result['value'];\r\n            }\r\n          })\r\n        })\r\n        document['vector'] = newVector;\r\n        cardsToCompareVector['docsWithVector'].push(document);\r\n      })\r\n\r\n      if(card['idCard'] === configFilter['targetCardForComparison']){\r\n        cardChoosed = {...cardsToCompareVector};\r\n      }else{\r\n        cardsToCompare.push(cardsToCompareVector); \r\n      }\r\n    })\r\n    return [cardChoosed, cardsToCompare]\r\n  }\r\n\r\n  const calcMagnitudeVector = (vector) => {\r\n    return Math.sqrt(vector.reduce((acumulator, value) => {\r\n      return value**2 + acumulator;\r\n    }))\r\n  }\r\n\r\n  const calcCosSimilarity = (vector1, magnitude1, vector2) => \r\n  {\r\n    let product = 0;\r\n\r\n    vector1.map((vector1Item, indexVector1) => {\r\n      product += vector1Item * vector2[indexVector1];\r\n    })\r\n\r\n    let magnitude2 = calcMagnitudeVector(vector2);\r\n\r\n    return product / (magnitude1 * magnitude2)\r\n  }\r\n\r\n  const compareSources = (choosedSource) => {\r\n\r\n    let [cardChoosed, cardsToCompare] = formatDocumentsWithVectors(getVectorFormat()) \r\n\r\n    let choosed = cardChoosed['docsWithVector'].map(item => {\r\n      let vector =  item['vector'].map((item) => {\r\n        return item['value'];\r\n      });\r\n      return {\r\n        vector : vector, \r\n        magnitude : calcMagnitudeVector(vector)\r\n      };\r\n    });\r\n\r\n    let similarity = {};\r\n\r\n    cardsToCompare.map((item) => {\r\n\r\n      let vectorToCompare = item['docsWithVector'].map(item => {\r\n        let vector = item['vector'].map((item) => {\r\n          return item['value'];\r\n        });\r\n        return {\r\n          vector : vector, \r\n          magnitude : calcMagnitudeVector(vector)\r\n        };\r\n      });\r\n\r\n      let listResults = [];\r\n\r\n      choosed.forEach((itemChoosed) => {\r\n        let listFirstResult = vectorToCompare.map(item => {\r\n          return calcCosSimilarity(\r\n              itemChoosed['vector'], \r\n              itemChoosed['magnitude'], \r\n              item['vector']\r\n            );\r\n        });\r\n        listFirstResult.sort((a,b)=>b-a);\r\n        listResults.push(listFirstResult[0])\r\n      })\r\n\r\n      similarity[item['idCard']] = {\r\n        listResults : listResults,\r\n        mean : listResults.reduce((acumulator, value) => {\r\n          return value + acumulator;\r\n        })/listResults.length\r\n      }\r\n    });\r\n\r\n    return similarity;\r\n  }\r\n\r\n  function ksort(obj) {\r\n    if (!obj || typeof (obj) != 'object') {\r\n      return [];\r\n    }\r\n    var keys = [], values = [];\r\n\r\n    for (let a in obj) {\r\n      keys.push(a);\r\n    }\r\n\r\n    keys = keys.reverse();\r\n\r\n    for (let i = 0; i < keys.length; i++) {\r\n      values.push(obj[keys[i]]);\r\n    }\r\n\r\n    return [keys, values];\r\n  }\r\n  const plotPostTime = () => {\r\n\r\n    let [labels, values] = ksort(plotDataPosttTime);\r\n\r\n    for(let a in labels){\r\n      labels[a] = labels[a]+'h';\r\n    }\r\n\r\n    let dataToPlot = [\r\n      {\r\n        values : values, \r\n        labels : labels,\r\n        type: 'pie',\r\n        hole: .2,\r\n        mode: 'label+percent+name',\r\n        textinfo: \"label+value+percent\",\r\n        textposition: \"inside\",\r\n        automargin: false,\r\n        marker: {colors: colorsHourPie},\r\n      }\r\n    ];\r\n\r\n    return <Plot\r\n        data={dataToPlot}\r\n        style={{width: \"100%\", height: \"100%\"}}\r\n        useResizeHandler={false}\r\n        layout={ {\r\n          title: 'Horários com mais publicações',\r\n          showlegend: true,\r\n        } }\r\n      />\r\n  }\r\n\r\n  const plotTfIdfByAll = () => {\r\n\r\n    let axis_x = plotDataAll.map(item => item['term']);\r\n    let axis_y = plotDataAll.map(item => item['value']);\r\n\r\n    let dataToPlot = [\r\n      {\r\n        x : axis_x, \r\n        y : axis_y,\r\n        mode: 'lines+markers',\r\n        marker: {color: 'red'},\r\n      }\r\n    ];\r\n\r\n    return <Plot\r\n        data={dataToPlot}\r\n        style={{width: \"100%\", height: \"100%\"}}\r\n        useResizeHandler={true}\r\n        layout={ {\r\n          title: 'Mais bem avaliados'\r\n        } }\r\n      />\r\n  }\r\n\r\n  const plotTfIdfByHours = () => {\r\n\r\n    let axis_x = Object.keys(plotDataHours);\r\n    let dataToPlot = [];\r\n\r\n    axis_x.forEach((hour) => {\r\n      let axis_y = [];\r\n      if(plotDataHours[hour]){\r\n        let array = plotDataHours[hour];\r\n        array.sort((a,b)=> a['value'] - b['value']);\r\n        array.forEach(\r\n        (itemDay, indexDay) => {\r\n\r\n          dataToPlot.push({\r\n            x: [hour+\"h\"],\r\n            y: [itemDay['value']],\r\n            type: 'bar',\r\n            name: itemDay['term'],\r\n            marker: {color: randomColor({\r\n              luminosity: 'dark',\r\n              seed : indexDay,\r\n            })},\r\n          })\r\n        })\r\n      }\r\n    })\r\n\r\n    return <Plot\r\n        data={dataToPlot}\r\n        style={{width: \"100%\", height: \"100%\"}}\r\n        config={{responsive: true}}\r\n        layout={ {\r\n          xaxis : { tickangle: -45},\r\n          barmode: 'group',\r\n          bargap :0.2,\r\n          bargroupgap: 0.1,\r\n            line: {\r\n          width: 2.5,\r\n          margin: 1\r\n      },\r\n          yaxis: {\r\n            zeroline: true,\r\n          },\r\n          title: 'Melhores por Horário',\r\n        } }\r\n      />\r\n  }\r\n\r\n  const plotTfIdfByWeek = () => {\r\n\r\n    let dataToPlot = [];\r\n    let months = ['Seg', 'Ter', 'Qua', 'Qui', 'Sex', 'Sab', 'Dom']\r\n    let daysColors = {'Seg':'yellow', 'Ter':'black', 'Qua':'purple', 'Qui':'red', 'Sex':'green', 'Sab':'pink', 'Dom':'blue'}\r\n\r\n    months.forEach((item, index) => {\r\n      plotDataWeek[index] && plotDataWeek[index].forEach((itemDay) => {\r\n        dataToPlot.push({\r\n          x: [months[index]],\r\n          y: [itemDay['value']],\r\n          type: 'bar',\r\n          name: itemDay['term'],\r\n          marker: {color: randomColor({luminosity: 'dark', hue: daysColors[months[index]]})},\r\n        })\r\n      })\r\n    })\r\n\r\n\r\n\r\n    return <Plot\r\n        data={dataToPlot}\r\n        style={{width: \"100%\", height: \"100%\"}}\r\n        layout={ {\r\n          barmode:\"group\",\r\n          bargap :0.2,\r\n          bargroupgap: 0.1,\r\n          title: 'Melhores por dia da semana'\r\n        } }\r\n      />\r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Typography variant=\"h5\" gutterBottom>\r\n        <FormattedMessage id=\"app.Calcs\" />\r\n        <Button variant=\"contained\" onClick={execCalcs} color=\"primary\" style={{margin:'0 5px'}}>\r\n          Executar Cálculos\r\n        </Button>\r\n      </Typography>\r\n        <div id=\"linear\">\r\n          <div className=\"chart\"></div>\r\n          <div className=\"status\"></div>\r\n          <div id=\"modelInspectionOutput\">\r\n            <p id=\"inspectionHeadline\"></p>\r\n            <table id=\"myTable\"></table>\r\n          </div>\r\n        </div>\r\n        <Grid container spacing={2}>          \r\n          <Grid item xs={12}>\r\n            Quantas palavras geradas : {countWordsGenerated}\r\n            <br/>\r\n            Quantas palavras apresentadas : {countWordsUsed}\r\n            <br/>\r\n            Quanto documentos analisados : {countDocuments}\r\n            <br/>\r\n            Quantas fontes analisadas : {countFonts}\r\n          </Grid>\r\n            {showComparison()}\r\n          <Grid item xs={12}>\r\n            {plotPostTime()}\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            {plotTfIdfByAll()}\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            {plotTfIdfByWeek()}\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            {plotTfIdfByHours()}\r\n          </Grid>\r\n\r\n        </Grid>\r\n    </div>\r\n  )\r\n}","import {Component} from 'react';\n\nexport default class EntityAbstract extends Component {\n\n  get(key){\n    return this.attrs[key];\n  }\n\n  set(key, value){\n    this.attrs[key] = value;\n  }\n\n  fill(data){\n    for(let i in this.attrs){\n      if(data[i]){\n        this.attrs[i] = data[i]\n      }\n    }\n  }\n\n  toArray(){\n    return this.attrs;\n  }\n}","import EntityAbstract from './EntityAbstract.jsx';\nimport { v4 as uuidv4 } from 'uuid';\n\nexport default class SourceEntity extends EntityAbstract\n{\n  constructor(data = []){\n    super();\n    this.attrs = {\n      id         : uuidv4(),\n      name       : 'Novo Conteúdo',\n      author     : '',\n      thumb      : 'add',\n      thumbColor : 'gray',\n      image      : '',\n      url        : '',\n      description: '',\n      category   : '',\n      active     : true,\n      items      : [],\n      created    : '',\n      status     : 'new' // new, loaded, error\n    }\n    if(data){\n      this.fill(data);\n    }\n  }\n}","import React, { useEffect } from \"react\";\r\n\r\nimport {\r\n  Grid, \r\nTextField,\r\n  Button,\r\n} from \"@material-ui/core\";\r\n\r\nimport moment from 'moment'\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { FormattedMessage } from 'react-intl';\r\nimport {DropzoneArea} from 'material-ui-dropzone'\r\n\r\nimport {sendDownload} from '../../services/Content/File';\r\n\r\nimport SourceEntity from '../../entities/SourceEntity.js'\r\n\r\nexport default function ConfigPanel({\r\n  configInput, \r\n  configToken,\r\n  cardsInput, \r\n  setConfigFilterCallback,\r\n  setCardsSourceCallback,\r\n  setConfigTokenCallback\r\n}) {\r\n\r\n  const [config, setConfig] = React.useState(configInput);\r\n  const [fileInfo, setFileData] = React.useState(null);\r\n  const [qtdColsInfo] = React.useState(3);\r\n\r\n    useEffect(() => {\r\n      setConfig({...configInput})\r\n    }, [configInput])\r\n\r\n  const fillFileInfo = (file) => {\r\n    if(file){\r\n      setFileData([\r\n        {\"key\" : 'name'    , \"value\" : file.name},\r\n        {\"key\" : 'size'    , \"value\" : file.size},\r\n        {\"key\" : 'type'    , \"value\" : file.type},\r\n        {\"key\" : 'included', \"value\" : moment(file.date).format('HH:mm DD/MM/Y')},\r\n      ]);\r\n    }\r\n  }\r\n\r\n  const handleUpdConfig = (key, value) => {\r\n    let newConfig = {...config};\r\n    newConfig[key] = value;\r\n    setConfigFilterCallback(newConfig)\r\n  }\r\n\r\n  const handleChange = (files) => {\r\n\r\n    if(!files[0]){ return false; }\r\n\r\n    let file     = files[0];\r\n    file.date    = new Date();\r\n    const reader = new FileReader()\r\n\r\n    reader.onload = async (e) => { \r\n      const text = (e.target.result);\r\n\r\n      loadFileConfig(JSON.parse(text))\r\n      fillFileInfo(file);\r\n    };\r\n    reader.readAsText(file)\r\n  }\r\n\r\n  const loadFileConfig = async (data) => \r\n  {\r\n    for(let i in data['cards']){\r\n      data['cards'][i] = new SourceEntity(data['cards'][i])\r\n    }\r\n\r\n    setConfigFilterCallback(data['config']);\r\n    setCardsSourceCallback([...data['cards']]);\r\n    setConfigTokenCallback(data['configToken']);\r\n  }\r\n\r\n  const sendBackUpToDownload = async () => {\r\n    console.log(generateBackUpData())\r\n    await sendDownload('data-guide-press.json', generateBackUpData());\r\n  }\r\n\r\n  const generateBackUpData = () => {\r\n\r\n    let cardsData = [];\r\n\r\n    for(let i in cardsInput){\r\n      if(cardsInput[i].get('status') !== 'new'){\r\n        cardsData.push( cardsInput[i].attrs );\r\n      }\r\n    }\r\n\r\n    let data = {\r\n      \"config\"     : configInput,\r\n      \"configToken\": configToken,\r\n      \"cards\"      : cardsData,\r\n    };\r\n    return data;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Typography variant=\"h5\" gutterBottom>\r\n        <FormattedMessage id=\"app.loadOrDownloadData\" />\r\n      </Typography>\r\n\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={2} md={2} sm={2}>\r\n          <Button variant=\"contained\" onClick={sendBackUpToDownload}color=\"primary\">\r\n            Download Base Completa\r\n          </Button>\r\n          <TextField \r\n            onChange={(event) => handleUpdConfig('rssHostDownload1', event.target.value)}\r\n            id=\"standard-basic\" \r\n            label=\"Link Rss\" \r\n            fullWidth\r\n            value={config.rssHostDownload1}\r\n            defaultValue={config.rssHostDownload1}\r\n            />\r\n          <TextField \r\n          \r\n            onChange={(event) => handleUpdConfig('rssHostParam1', event.target.value)}\r\n            id=\"standard-basic\" \r\n            label=\"Param Rss\" \r\n            fullWidth\r\n            value={config.rssHostParam1}\r\n            defaultValue={config.rssHostParam1}\r\n            />\r\n\r\n        </Grid>\r\n\r\n        <Grid item xs={4} md={4} sm={4} >\r\n          <DropzoneArea\r\n            filesLimit={1}\r\n            dropzoneText={\"Aqui coloca o arquivo\"}\r\n            showPreviews={false}\r\n            acceptedFiles={['application/json']}\r\n            showPreviewsInDropzone={false}\r\n            onChange={handleChange}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={5} md={5} sm={5}>\r\n          <Grid container spacing={2} align = \"center\" justifyContent = \"center\" alignItems = \"center\">\r\n            {!fileInfo  ? \r\n              'Conteúdo não carregado'\r\n              :\r\n              fileInfo.map((item, index) => { \r\n              return (\r\n                <React.Fragment key={'info-'+index}>\r\n                  <Grid item xs={qtdColsInfo} md={qtdColsInfo} sm={qtdColsInfo}>\r\n                    <b>{ item.key }</b>\r\n                  </Grid>\r\n                  <Grid item xs={qtdColsInfo} md={qtdColsInfo} sm={qtdColsInfo}>\r\n                    {item.value}\r\n                  </Grid>\r\n                </React.Fragment>\r\n              )\r\n            })}\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  )\r\n}","import React, { useEffect } from \"react\";\r\n\r\nimport {\r\n  Grid, \r\n  TextField,\r\n  Select,\r\n} from \"@material-ui/core\";\r\n\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { FormattedMessage, useIntl } from 'react-intl';\r\nimport FormControl from '@material-ui/core/FormControl';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  labelUp: {\r\n    ...theme.typography.button,\r\n    backgroundColor: theme.palette.background.paper,\r\n    padding: theme.spacing(1),\r\n  },\r\n    formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n    width: '100%',\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nexport default function TokenizacaoPanel({configToken, callbackLoadData}) {\r\n\r\n  const classes = useStyles();\r\n  const intl = useIntl();\r\n\r\n  const [configs, setConfigs] = React.useState(configToken);\r\n\r\n  useEffect(()=>{\r\n    setConfigs({...configToken})\r\n  },[configToken])\r\n\r\n  const handleUpdConfig = (key, value) => {\r\n    let newConfigs = configs;\r\n    newConfigs[key] = value;\r\n    callbackLoadData(newConfigs)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className={classes.labelUp}>\r\n        <Typography variant=\"h5\" gutterBottom>\r\n          <FormattedMessage id=\"app.tokenizerTitle\" />\r\n        </Typography>\r\n      </div>\r\n      <Grid container spacing={1}>\r\n        <Grid item xs={2}>\r\n          <FormattedMessage id=\"app.tokenizerRegexLabel\" />\r\n        </Grid>\r\n        <Grid item xs={4}>\r\n          <TextField \r\n            className={classes.formControl}\r\n            inputProps={{ \r\n              form: {autocomplete: 'off'}, \r\n            }}\r\n            value={configs.divider || ''}\r\n            onChange={(event) => handleUpdConfig('divider', event.target.value)}\r\n            id=\"outlined-basic\" \r\n            label=\"\" \r\n            variant=\"outlined\" />\r\n        </Grid>\r\n        <Grid item xs={2}>\r\n          <FormattedMessage id=\"app.tokenizerNGramsLabel\" />\r\n        </Grid>\r\n        <Grid item xs={4}>\r\n          <TextField  \r\n            className={classes.formControl}\r\n            inputProps={{ \r\n              form: {autocomplete: 'off'}, \r\n            }}\r\n            value={configs.ngrams}\r\n            onChange={(event) => handleUpdConfig('ngrams', event.target.value)}\r\n            id=\"outlined-basic\" \r\n            label=\"\" \r\n            variant=\"outlined\" />\r\n        </Grid>\r\n        <Grid item xs={2}>\r\n          <FormattedMessage id=\"app.tokenizerCaseLabel\" />\r\n        </Grid>\r\n        <Grid item xs={4}>\r\n         <FormControl variant=\"outlined\" className={classes.formControl}>\r\n          <Select\r\n            native\r\n            value={configs.case}\r\n            onChange={(event) => handleUpdConfig('case', event.target.value)}\r\n            label=\"Case\"\r\n          >\r\n            <option aria-label=\"None\" value=\"\" />\r\n            <option value='upper'>\r\n              {intl.formatMessage({id:\"app.tokenizerCaseUpperLabel\"})}\r\n            </option>\r\n            <option value='lower'>\r\n              {intl.formatMessage({id:\"app.tokenizerCaseLowerLabel\"})}\r\n            </option>\r\n          </Select>\r\n        </FormControl>\r\n        </Grid>\r\n        <Grid item xs={2}>\r\n          <FormattedMessage id=\"app.tokenizerMinLengthLabel\" />\r\n        </Grid>\r\n        <Grid item xs={4}>\r\n          <TextField  \r\n            className={classes.formControl}\r\n            inputProps={{ \r\n              form: {autocomplete: 'off'}, \r\n            }}\r\n            value={configs.minLength}\r\n            onChange={(event) => handleUpdConfig('minLength', event.target.value)}\r\n            id=\"outlined-basic\" \r\n            label=\"\" \r\n            variant=\"outlined\" />\r\n        </Grid>\r\n        <Grid item xs={2}>\r\n          <FormattedMessage id=\"app.tokenizerStopWordsLabel\" />\r\n        </Grid>\r\n        <Grid item xs={4}>\r\n          <TextField \r\n            onChange={(event) => handleUpdConfig('stopWords', event.target.value)}\r\n            label=\"\" \r\n            type=\"text\"\r\n            fullWidth\r\n            value={configs.stopWords}\r\n            variant=\"outlined\"\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  )\r\n}","\r\nimport React from \"react\";\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {\r\n  Grid,\r\n  TextField,\r\n  Checkbox,\r\n  Select\r\n} from \"@material-ui/core\";\r\n\r\nimport { FormattedMessage, useIntl } from 'react-intl';\r\nimport { DateTimePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\r\nimport ptLocale from \"date-fns/locale/pt-BR\";\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  labelUp: {\r\n    ...theme.typography.button,\r\n    backgroundColor: theme.palette.background.paper,\r\n    padding: theme.spacing(1),\r\n  },\r\n}));\r\n\r\n\r\nexport default function FilteringAndSetPanel({\r\n  cardsSource, \r\n  configInput,\r\n  setConfigFilterCallback\r\n}) {\r\n\r\n  const intl = useIntl();\r\n  const classes = useStyles();\r\n  const [checkedTypes, setCheckedTypes] = React.useState([false, false, false, false]);\r\n\r\n  const renderSelectTypes = () => {\r\n    let types = [];\r\n\r\n    cardsSource.forEach((item, index) => {\r\n      if(item.get('status') !== 'new' && item.get('category') && item.get('active')){\r\n        for(let a in types){\r\n          if(types[a] === item.get('category')){\r\n            return false;\r\n          }\r\n        }\r\n        types.push(item.get('category'));\r\n      }\r\n    });\r\n    \r\n     return types.map((type, index) => <FormControlLabel key={\"checkfilter\"+index}\r\n        control={<Checkbox \r\n          checked={checkedTypes[index]} \r\n          onChange={() => handleTypeCheck(index)} \r\n          name=\"checkedA\" />}\r\n        label={type}\r\n      />);\r\n  }\r\n\r\n  const renderSimilarityCheck = () => {\r\n    let options = cardsSource.map((item, index) => {\r\n      if(item.get('status') !== 'new'){\r\n        return <option aria-label=\"content\" value={item.get('id')} key={'comparisonOption'+index}>\r\n          {item.get('name')+ '- '+item.get('id')}\r\n        </option>\r\n      }\r\n      return '';\r\n    });\r\n    \r\n    return <Select\r\n            native\r\n            value={configInput.targetCardForComparison}\r\n            onChange={(event) => handleUpdConfig('targetCardForComparison', event.target.value)}\r\n            label=\"targetCardForComparison\"\r\n          >\r\n            <option aria-label=\"\" value=\"\" key={'comparisonOption00'}>\r\n              {/* {intl.formatMessage({id:\"app.FilterAndSetFieldContent\"})} */}\r\n              Não quero comprar fontes\r\n            </option>\r\n            {options}\r\n          </Select>\r\n  }\r\n\r\n  const handleTypeCheck = (index) => {\r\n    let newTypes = [...checkedTypes]\r\n    newTypes[index] = !newTypes[index]; \r\n    setCheckedTypes(newTypes)\r\n  }\r\n\r\n  const handleUpdConfig = (key, value) => {\r\n    let newConfigs = {...configInput};\r\n    newConfigs[key] = value;\r\n    console.log(newConfigs)\r\n    setConfigFilterCallback(newConfigs)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className={classes.labelUp}>\r\n        <Typography variant=\"h5\" gutterBottom>\r\n          <FormattedMessage id=\"app.FilterAndSetTitle\" />\r\n        </Typography>\r\n      </div>\r\n      <Grid container spacing={1}>\r\n        <Grid item xs={6}>\r\n          <Typography variant=\"h6\" gutterBottom>\r\n            Intervalo de tempo\r\n          </Typography>\r\n          <Grid container spacing={1}>\r\n            <Grid item xs={6}>\r\n              <MuiPickersUtilsProvider utils={DateFnsUtils} locale={ptLocale}>\r\n                <DateTimePicker\r\n                  label=\"Início\"\r\n                  clearable\r\n                  inputVariant=\"outlined\"\r\n                  value={configInput?.minDate}\r\n                  onChange={(event) => handleUpdConfig('minDate', event)}\r\n                  inputProps={{ \r\n                    form: {autocomplete: 'off'}, \r\n                  }}\r\n                />\r\n              </MuiPickersUtilsProvider>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <MuiPickersUtilsProvider utils={DateFnsUtils} locale={ptLocale}>\r\n                <DateTimePicker\r\n                  label=\"Fim\"\r\n                  clearable\r\n                  inputVariant=\"outlined\"\r\n                  value={configInput?.maxDate}\r\n                  onChange={(event) => handleUpdConfig('maxDate', event)}\r\n                  inputProps={{ \r\n                    form: {autocomplete: 'off'}, \r\n                  }}\r\n                />\r\n              </MuiPickersUtilsProvider>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid item xs={6}>\r\n          <Typography variant=\"h6\" gutterBottom>\r\n            Tipos de conteúdo permitidos\r\n          </Typography>\r\n          <Grid item xs={12}>\r\n            {renderSelectTypes()}\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n        </Grid>\r\n        <Grid item xs={4}>\r\n          <Typography variant=\"h7\" gutterBottom>\r\n            Mínimo de itens no card (0 = sem limite)\r\n          </Typography>\r\n            <TextField \r\n              onChange={(event) => handleUpdConfig('minItemPerCard', event.target.value)}\r\n              id=\"demo-helper-text-aligned-no-helper\" \r\n              label=\"\" \r\n              type=\"number\"\r\n              // fullWidth\r\n              value={configInput?.minItemPerCard}\r\n              inputProps={{ \r\n                  form: {autocomplete: 'off'}, \r\n                  inputMode: 'numeric', \r\n                  pattern: '[0-9]*' \r\n                }}\r\n              variant=\"outlined\"\r\n            />\r\n        </Grid>\r\n        <Grid item xs={4}>\r\n          <Typography variant=\"h7\" gutterBottom>\r\n            Tamanho Mínimo do documento (0 = sem limite)\r\n          </Typography>\r\n            <TextField \r\n              onChange={(event) => handleUpdConfig('minCharsPerItem', parseInt(event.target.value))}\r\n              id=\"demo-helper-text-aligned-no-helper\" \r\n              label=\"\" \r\n              type=\"number\"\r\n              value={configInput.minCharsPerItem}\r\n              inputProps={{ inputMode: 'numeric', pattern: '[0-9]*' }}\r\n              variant=\"outlined\"\r\n            />\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <Typography variant=\"h6\" gutterBottom>\r\n            Campo usado para processamento\r\n          </Typography>\r\n          <Select\r\n            native\r\n            value={configInput.targetField}\r\n            onChange={(event) => handleUpdConfig('targetField', event.target.value)}\r\n            label=\"targetField\"\r\n          >\r\n            <option aria-label=\"content\" value=\"content\">\r\n              {intl.formatMessage({id:\"app.FilterAndSetFieldContent\"})}\r\n            </option>\r\n            <option aria-label=\"title\" value=\"title\">\r\n              {intl.formatMessage({id:\"app.FilterAndSetFieldTitle\"})}\r\n            </option>\r\n          </Select>\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <Typography variant=\"h6\" gutterBottom>\r\n            Fonte usada para comparação\r\n          </Typography>\r\n          <Grid item xs={12}>\r\n            {renderSimilarityCheck()}\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  )\r\n}","import React, { useState, useEffect } from 'react';\nimport MainHeader from '../../components/header/MainHeader.jsx';\nimport SourceContents from '../../components/download/SourceContents.jsx';\n\nimport CalcPanel from '../../components/panel/CalcPanel.jsx';\nimport ConfigPanel from '../../components/panel/ConfigPanel.jsx';\nimport TokenizacaoPanel from '../../components/panel/TokenizacaoPanel.jsx';\nimport FilteringAndSetPanel from '../../components/panel/FilteringAndSetPanel.jsx';\n\nimport SourceEntity from '../../entities/SourceEntity'\n\nimport {\n    Divider\n} from \"@material-ui/core\";\n\nexport default function Home() {\n\n  const [cardsSource, setCardsSource] = useState([new SourceEntity()]);\n\n  const [configFilter, setConfigFilter] = useState({\n    'rssHostDownload1': 'https://api.rss2json.com/v1/api.json',\n    'rssHostParam1'   : 'rss_url',\n    'minItemPerCard'   : 1,\n    'minCharsPerItem'   : 0,\n    'minDate'   : null,\n    'maxDate'   : null,\n    'targetField' : 'content',\n    'targetCardForComparison' : '',\n  });\n\n  const [configToken, setConfigToken] = useState({\n    'divider' : '[-.,;!?\\\\\\(\\)\\\"\\' ]',\n    'ngrams' : 1,\n    'minLength' : 2,\n    'case' : '',\n    'stopWords' : 'fato',\n  });\n\n  useEffect(() => {\n    setCardsSource(cardsSource)\n  }, [cardsSource] )\n\n  const setConfigFilterCallback = (newConfig) => {\n    setConfigFilter(newConfig)\n  }\n\n  const setCardsSourceCallback = (objCollection) => {\n\n    let newArray = [...objCollection];\n\n    if(newArray.length === 0 || newArray[newArray.length - 1].get('status') !== 'new'){\n      newArray.push(new SourceEntity());\n    }\n\n    setCardsSource(newArray)\n  }\n\n  const setConfigTokenCallback = (data) => {\n    setConfigToken(data)\n  }\n\n  return (\n    <div>\n      <MainHeader/>\n\n      <SourceContents cardsInput={cardsSource} setCardsInput={setCardsSourceCallback}/>\n\n      <Divider variant=\"middle\" />\n\n      <div style={{ backgroundColor: '#D4F1F4'}}>\n        <ConfigPanel \n          configInput={configFilter}\n          cardsInput={cardsSource} \n          configToken={configToken}\n          setConfigFilterCallback={setConfigFilterCallback} \n          setCardsSourceCallback={setCardsSourceCallback}\n          setConfigTokenCallback={setConfigTokenCallback}\n          />\n      </div>\n      <Divider variant=\"middle\" />\n\n      <TokenizacaoPanel \n        configToken={configToken} \n        callbackLoadData={setConfigTokenCallback}/>\n\n      <Divider variant=\"middle\" />\n\n      <FilteringAndSetPanel \n        cardsSource={cardsSource} \n        configInput={configFilter}\n        setConfigFilterCallback={setConfigFilterCallback} \n        />\n\n      <Divider variant=\"middle\" />\n\n      <div style={{ backgroundColor: '#75E6DA'}}>\n        <CalcPanel \n          cardsInput={cardsSource} \n          configToken={configToken}\n          configFilter={configFilter}\n        />\n      </div>\n    </div>\n  )\n}","import './App.css';\nimport Home from './pages/index/Home.jsx';\nimport React from \"react\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Home/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport {IntlProvider} from 'react-intl';\n\n// import lang_en from './i18n/lang/en.json';\nimport lang_pt_BR from './i18n/lang/pt-BR.json';\n\nconst locale = navigator.language;\n\nReactDOM.render(\n  <React.StrictMode>\n    <IntlProvider locale ={locale} messages={lang_pt_BR}>\n    <App />\n    </IntlProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}