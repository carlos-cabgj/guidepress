{"version":3,"sources":["components/header/MainHeader.jsx","components/cards/ItemCardStyle.jsx","components/cards/CardSource.jsx","components/cards/CardSourceSetModal.jsx","services/Content/File.js","services/Content/Rss.js","components/cards/CardSourceUpModal.jsx","components/download/SourceContents.jsx","services/Ai/TfIdf.js","components/panel/CalcPanel.jsx","entities/EntityAbstract.jsx","entities/SourceEntity.js","components/panel/ConfigPanel.jsx","components/panel/TokenizacaoPanel.jsx","components/panel/FilteringAndSetPanel.jsx","pages/index/Home.jsx","components/charts/ByWeek.jsx","components/charts/DataHours.jsx","components/charts/TfIdfByAll.jsx","components/charts/PostTime.jsx","components/charts/Comparison.jsx","components/charts/Tree.jsx","components/panel/ResultsPanel.jsx","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","grow","flexGrow","menuButton","marginRight","spacing","title","display","breakpoints","up","search","position","borderRadius","shape","backgroundColor","alpha","palette","common","white","marginLeft","width","searchIcon","padding","height","pointerEvents","alignItems","justifyContent","inputRoot","color","inputInput","paddingLeft","transition","transitions","create","sectionDesktop","sectionMobile","MainHeader","classes","React","useState","anchorEl","setAnchorEl","mobileMoreAnchorEl","setMobileMoreAnchorEl","isMenuOpen","Boolean","isMobileMenuOpen","handleMobileMenuClose","handleMenuClose","renderMenu","Menu","anchorOrigin","vertical","horizontal","id","keepMounted","transformOrigin","open","onClose","MenuItem","onClick","mobileMenuId","renderMobileMenu","IconButton","Badge","badgeContent","event","currentTarget","className","AppBar","Toolbar","Typography","variant","noWrap","ItemCardStyle","root","maxWidth","margin","imgChange","IOSSwitch","withStyles","switchBase","transform","opacity","border","thumb","track","grey","checked","focusVisible","props","Switch","focusVisibleClassName","disableRipple","CardSource","indice","sourceObj","handleOpenModal","handleOpenSetModal","handleUpdCard","item","setItem","useEffect","Card","CardContent","CardActionArea","component","get","ListItem","divider","Icon","style","fontSize","Button","Grid","container","xs","md","sm","moment","format","FormControlLabel","control","onChange","key","value","newItem","set","handleUpdConfig","target","name","label","modal","paper","background","boxShadow","shadows","CardSourceSetModal","statusModal","handleDownloadCard","handleDeleteCard","handleClose","setOpen","Modal","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","sendDownload","data","a","element","document","createElement","textFile","Blob","JSON","stringify","type","href","URL","createObjectURL","download","body","appendChild","click","getFeeds","inputFeed","feed","Axios","response","author","image","items","Date","getTime","CardSourceUpModal","rssLink","setTextRssLink","downloadFormat1","loadRssButton","Source","stripAllArray","array","replace","trim","noValidate","autoComplete","TextField","e","fullWidth","files","file","date","reader","FileReader","onload","contents","result","Parser","parseString","opc","rssParsed","d","description","getFullYear","getMonth","getDay","getHours","thumbColor","category","url","readAsText","loadFileRssContent","json","parse","loadCardContent","alert","gutterBottom","SourceContents","cardsInput","setCardsInput","openModalUpSource","setOpenModalUpSource","openModalSetSource","setOpenModalSetSource","indiceAtivo","setIndiceAtivo","newCards","splice","attrs","$item","handleOpenModalUpSource","map","card","index","fill","calcTfIDFFromTfCard","dataTreated","forEach","cardIndex","newResults","dataSet","tfidf","push","term","results","posItem","pubDate","categories","extractTfAllDocuments","configToken","propertyChoosed","i","termsCaseTreated","makeTokens","calcTf","addTermsToDictionary","chooseCategories","$field","join","terms","dictionary","words","tf","wordsLength","Object","keys","length","defineIdf","tfResults","wordsPerText","idf","qtdTexts","Math","log","args","text","fieldData","fieldDatawithoutInvisible","textCase","minLength","ngrams","choosedFieldFiltered","expression","RegExp","termsSplited","split","termsMinLength","toLowerCase","toUpperCase","stopWords","dataWithNgrams","applyNgrams","applyStopWords","finalData","arrayOfSplitedData","filter","newArray","newString","CalcPanel","modelTree","setModelTree","modelTree2","setModelTree2","configFilter","setResults","tfIdf","setTfIdf","limitCount","similarityList","setSimilarityList","calcAll","selectedWeek","minValueTfIdf","maxValueTfIdf","cutTfIdf","cutTreeData","counts","countWordsGenerated","countWordsUsed","countDocuments","countFonts","selectedAll","selectedHours","selectedPostsTime","cardTfIdf","sort","b","slicedResults","slice","day","hour","concat","percentCutTFIDF","idfCut","percentCutTree","treeCut","round","dataToTreeFirstSelected","z","dataToTree","dataToTree2_byDoc","dataToTree2","dataToTree2_keys","x","getDayName","termSecondTree","termoEscolhidoParaSegundaArvore","part","p","selectedAllWihtoutDuplicates","pos","arrayContent","calcDataTree","calcDataTree2","countWordsUsedTree","plotDataPostTime","plotDataWeek","plotDataHours","similarity","compareSources","num","console","shuffle","randomIndex","currentIndex","floor","random","training_data","test_data","dt","DecisionTree","require","countTrainable","percentTrain","features","accuracy","evaluate","modelInJson","toJSON","model","calcMagnitudeVector","vector","sqrt","reduce","acumulator","choosedSource","vectorFormat","cardChoosed","cardsToCompare","formatToDecript","cardsToCompareVector","idCard","docsWithVector","newVector","formatDocumentsWithVectors","unique","getVectorFormat","choosed","magnitude","vectorToCompare","listResults","itemChoosed","listFirstResult","vector1","magnitude1","vector2","product","vector1Item","indexVector1","magnitude2","calcCosSimilarity","mean","cards","targetField","dataCard","calcTfIdfCards","EntityAbstract","this","Component","SourceEntity","uuidv4","active","created","status","ConfigPanel","configInput","setConfigFilterCallback","setCardsSourceCallback","setConfigTokenCallback","config","setConfig","fileInfo","setFileData","qtdColsInfo","fillFileInfo","size","newConfig","loadFileConfig","sendBackUpToDownload","generateBackUpData","cardsData","rssHostDownload1","rssHostParam1","filesLimit","dropzoneText","showPreviews","acceptedFiles","showPreviewsInDropzone","align","Fragment","labelUp","typography","button","formControl","minWidth","selectEmpty","marginTop","TokenizacaoPanel","callbackLoadData","intl","useIntl","configs","setConfigs","newConfigs","inputProps","form","autocomplete","FormControl","Select","native","case","formatMessage","input","FilteringAndSetPanel","cardsSource","tree","setTree","tree2","setTree2","checkedTypes","setCheckedTypes","setPercentTrain","downloadModelTree","handleTypeCheck","newTypes","handleBlur","utils","DateFnsUtils","locale","ptLocale","DateTimePicker","clearable","inputVariant","minDate","maxDate","types","Checkbox","renderSelectTypes","minItemPerCard","inputMode","pattern","options","targetCardForComparison","renderSimilarityCheck","FilledInput","endAdornment","InputAdornment","max","min","toString","substr","Slider","newValue","onChangeCommitted","Input","Number","onBlur","step","Home","setCardsSource","setConfigFilter","setConfigToken","objCollection","Divider","PlotByWeek","dataToPlot","months","daysColors","itemDay","y","marker","randomColor","luminosity","hue","layout","barmode","bargap","bargroupgap","plotTfIdfByWeek","axis_x","indexDay","seed","responsive","xaxis","tickangle","line","yaxis","zeroline","plotTfIdfByHours","TfIdfByAll","plotDataAll","mode","useResizeHandler","plotTfIdfByAll","colorsHourPie","PostTime","plotDataPosttTime","obj","values","reverse","ksort","labels","hole","textinfo","textposition","automargin","colors","showlegend","plotPostTime","PlotComparison","axis_y","showComparison","PlotTree","printNode","node","indexParent","vals","child","val","makeTree","ResultsPanel","overflow","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","navigator","language","ReactDOM","render","StrictMode","messages","lang_pt_BR","getElementById"],"mappings":"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","file":"static/js/main.c2ea67dd.chunk.js","sourcesContent":["import React from 'react';\nimport { alpha, makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport Badge from '@material-ui/core/Badge';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport MailIcon from '@material-ui/icons/Mail';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport MoreIcon from '@material-ui/icons/MoreVert';\n\nconst useStyles = makeStyles((theme) => ({\n  grow: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n    },\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: alpha(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: alpha(theme.palette.common.white, 0.25),\n    },\n    marginRight: theme.spacing(2),\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(3),\n      width: 'auto',\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'inherit',\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('md')]: {\n      width: '20ch',\n    },\n  },\n  sectionDesktop: {\n    display: 'none',\n    [theme.breakpoints.up('md')]: {\n      display: 'flex',\n    },\n  },\n  sectionMobile: {\n    display: 'flex',\n    [theme.breakpoints.up('md')]: {\n      display: 'none',\n    },\n  },\n}));\n\nexport default function MainHeader() {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\n\n  const isMenuOpen = Boolean(anchorEl);\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n\n  const handleProfileMenuOpen = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleMobileMenuClose = () => {\n    setMobileMoreAnchorEl(null);\n  };\n\n  const handleMenuClose = () => {\n    setAnchorEl(null);\n    handleMobileMenuClose();\n  };\n\n  const handleMobileMenuOpen = (event) => {\n    setMobileMoreAnchorEl(event.currentTarget);\n  };\n\n  const menuId = 'primary-search-account-menu';\n  const renderMenu = (\n    <Menu\n      anchorEl={anchorEl}\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      id={menuId}\n      keepMounted\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      open={isMenuOpen}\n      onClose={handleMenuClose}\n    >\n      <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\n      <MenuItem onClick={handleMenuClose}>My account</MenuItem>\n    </Menu>\n  );\n\n  const mobileMenuId = 'primary-search-account-menu-mobile';\n  const renderMobileMenu = (\n    <Menu\n      anchorEl={mobileMoreAnchorEl}\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      id={mobileMenuId}\n      keepMounted\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      open={isMobileMenuOpen}\n      onClose={handleMobileMenuClose}\n    >\n      <MenuItem>\n        <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n          <Badge badgeContent={4} color=\"secondary\">\n            <MailIcon />\n          </Badge>\n        </IconButton>\n        <p>Messages</p>\n      </MenuItem>\n      <MenuItem>\n        <IconButton aria-label=\"show 11 new notifications\" color=\"inherit\">\n          <Badge badgeContent={11} color=\"secondary\">\n            <NotificationsIcon />\n          </Badge>\n        </IconButton>\n        <p>Notifications</p>\n      </MenuItem>\n      <MenuItem onClick={handleProfileMenuOpen}>\n        <IconButton\n          aria-label=\"account of current user\"\n          aria-controls=\"primary-search-account-menu\"\n          aria-haspopup=\"true\"\n          color=\"inherit\"\n        >\n          <AccountCircle />\n        </IconButton>\n        <p>Profile</p>\n      </MenuItem>\n    </Menu>\n  );\n\n  return (\n    <div className={classes.grow}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography className={classes.title} variant=\"h6\" noWrap>\n            GuidePress\n          </Typography>\n\n          <div className={classes.grow} />\n          <div className={classes.sectionDesktop}>\n          </div>\n          <div className={classes.sectionMobile}>\n            <IconButton\n              aria-label=\"show more\"\n              aria-controls={mobileMenuId}\n              aria-haspopup=\"true\"\n              onClick={handleMobileMenuOpen}\n              color=\"inherit\"\n            >\n              <MoreIcon />\n            </IconButton>\n          </div>\n        </Toolbar>\n      </AppBar>\n      {renderMobileMenu}\n      {renderMenu}\n    </div>\n  );\n}","function ItemCardStyle(theme) {\n    return {\n        root: {\n            maxWidth: 295,\n            margin: 20,\n        },\n        imgChange: {\n            'object-fit' : 'contain',\n        },\n    }\n}\n\nexport default ItemCardStyle;","import React, {useEffect} from \"react\";\nimport {\n  Card, \n  CardActionArea, \n  CardContent, \n  Grid, \n  ListItem, \n  Switch,\n  withStyles,\n  makeStyles\n} from \"@material-ui/core\";\nimport Icon from '@material-ui/core/Icon';\n\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from '@material-ui/core/Button';\nimport moment from 'moment'\nimport ItemCardStyle from './ItemCardStyle.jsx';\nimport {FormattedMessage} from 'react-intl';\n\n\nconst useStyles = makeStyles((theme) => (ItemCardStyle(theme)));\n\nconst IOSSwitch = withStyles((theme) => ({\n  root: {\n    width: 42,\n    height: 26,\n    padding: 0,\n    margin: theme.spacing(1),\n  },\n  switchBase: {\n    padding: 1,\n    '&$checked': {\n      transform: 'translateX(16px)',\n      color: theme.palette.common.white,\n      '& + $track': {\n        backgroundColor: '#52d869',\n        opacity: 1,\n        border: 'none',\n      },\n    },\n    '&$focusVisible $thumb': {\n      color: '#52d869',\n      border: '6px solid #fff',\n    },\n  },\n  thumb: {\n    width: 24,\n    height: 24,\n  },\n  track: {\n    borderRadius: 26 / 2,\n    border: `1px solid ${theme.palette.grey[400]}`,\n    backgroundColor: theme.palette.grey[50],\n    opacity: 1,\n    transition: theme.transitions.create(['background-color', 'border']),\n  },\n  checked: {},\n  focusVisible: {},\n}))(({ classes, ...props }) => {\n  return (\n    <Switch\n      focusVisibleClassName={classes.focusVisible}\n      disableRipple\n      classes={{\n        root: classes.root,\n        switchBase: classes.switchBase,\n        thumb: classes.thumb,\n        track: classes.track,\n        checked: classes.checked,\n      }}\n      {...props}\n    />\n  );\n});\n\nexport default function CardSource({ \n  indice, \n  sourceObj, \n  handleOpenModal, \n  handleOpenSetModal, \n  handleUpdCard \n}) {\n  const classes = useStyles();\n  const [item, setItem] = React.useState(sourceObj);\n\n  useEffect(() => {\n    setItem(sourceObj)\n  }, [sourceObj] )\n\n  const handleCardOptions = (event) => {\n    handleOpenSetModal(indice);\n  }\n\n  const handleUpdConfig = (key, value) => {\n    let newItem = item;\n    if(key === 'active'){\n      newItem.set(key, !newItem.get('active'));\n    }else{\n      newItem.set(key, value);\n    }\n    handleUpdCard(indice, newItem);\n  }\n\n  return (\n    <Card className={classes.root} display=\"inline\">\n      <CardContent>\n        <CardActionArea onClick={handleCardOptions}>\n          <Typography variant=\"body2\" color=\"initial\" component=\"p\">\n            {item.get('name')} \n            <br/>\n            {item.get('id')}\n          </Typography>\n          <ListItem divider key={'div1'} />\n          <br />\n          <div className={classes.imgChange}>\n            <Icon style={{ fontSize: 100, color : item.get('thumbColor')}}>\n              {item.get('thumb')}\n            </Icon>\n          </div>\n\n        </CardActionArea>\n\n        <Button variant=\"contained\" onClick={() => handleOpenModal(indice)} color=\"secondary\">\n          <FormattedMessage id=\"app.addContent\"/>\n        </Button>\n\n        <Typography variant=\"body2\" color=\"initial\" component=\"p\">\n          <FormattedMessage id=\"app.description\"/>\n        </Typography>\n\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n          {item.get('description')}\n        </Typography>\n\n        <br />\n\n        <Grid container spacing={0}>\n          <Grid item xs={6} md={6} sm={6}>\n            <Typography variant=\"body2\" color=\"initial\" component=\"span\">\n              <b><FormattedMessage id=\"app.Status\"/></b>:\n            </Typography>\n            <Typography variant=\"body2\" color=\"error\" component=\"span\">\n              {item.get('status')}\n            </Typography>\n          </Grid>\n          <Grid item xs={6} md={6} sm={6}>\n            <Typography variant=\"body2\" color=\"initial\" component=\"span\">\n              <b><FormattedMessage id=\"app.Date\"/></b>:\n            </Typography>\n            <Typography variant=\"body2\" color=\"error\" component=\"span\">\n              {moment(item.get('vinculacao')).format('DD/MM/Y')}\n            </Typography>\n          </Grid>\n          <Grid item xs={6} md={6} sm={6}>\n            {item.get('status') !== 'new' ? <FormControlLabel\n              control={\n                <IOSSwitch \n                checked={item.get('active')}\n                onChange={(event) => handleUpdConfig('active', event.target.value)}\n                name=\"checkedB\" />\n              }\n              label={'ativar'}\n            /> :\n              <b></b>\n            }\n          </Grid>\n        </Grid>\n    </CardContent>\n    </Card>\n  )\n}","\nimport React, { useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {Button} from \"@material-ui/core\";\nimport Modal from '@material-ui/core/Modal';\nimport Fade from '@material-ui/core/Fade';\nimport Backdrop from '@material-ui/core/Backdrop';\n\nconst useStyles = makeStyles((theme) => ({\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n}));\n\nexport default function CardSourceSetModal({\n  statusModal, \n  handleDownloadCard, \n  handleDeleteCard,\n  handleClose\n}) {\n\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n\n  useEffect(()=>{\n    setOpen(statusModal)\n  },[statusModal])\n\n  return (\n    <div>\n      <Modal\n        aria-labelledby=\"transition-modal-title\"\n        aria-describedby=\"transition-modal-description\"\n        className={classes.modal}\n        open={open}\n        onClose={handleClose}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500,\n        }}\n      >\n        <Fade in={open}>\n          <div className={classes.paper}>\n            <Button variant=\"contained\" onClick={handleDownloadCard} color=\"secondary\">\n              {/* <FormattedMessage id=\"app.addContent\"/> */}\n              Download\n            </Button>\n            <Button variant=\"contained\" onClick={handleDeleteCard}>\n              {/* <FormattedMessage id=\"app.addContent\"/> */}\n              Excluir Card\n            </Button>\n          </div>\n        </Fade>\n      </Modal>\n    </div>\n  );\n}","export const sendDownload = async (name, data) => {\n\n    const element = document.createElement(\"a\");\n\n    const textFile = new Blob([\n      JSON.stringify(data)\n    ], {type: 'text/plain'}); \n\n    element.href = URL.createObjectURL(textFile);\n    element.download = name;\n    document.body.appendChild(element); \n    element.click();\n}","import Axios from 'axios'\n// import {feeds} from '../../dataG1.js';\n\nexport const getFeeds = async (inputFeed) => {\n\n  // return feeds;\n  let feed = {};\n\n  let response =  await Axios.get(\"https://api.rss2json.com/v1/api.json?rss_url=\" + inputFeed);\n\n  feed[\"author\"]  = response?.data?.author || response?.data?.feed?.author;\n  feed[\"image\"]   = response?.data?.image || response?.data?.feed?.image;\n  feed[\"title\"]   = response?.data?.title || response?.data?.feed?.title;\n  feed[\"items\"]   = response?.data?.items || response?.data?.items;\n  feed[\"created\"] = new Date().getTime();\n  feed[\"url\"]     = inputFeed;\n\n  return feed;\n}","import React, { useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {TextField, Grid, Typography} from \"@material-ui/core\";\nimport Button from '@material-ui/core/Button';\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\nimport {DropzoneArea} from 'material-ui-dropzone'\nimport {sendDownload} from '../../services/Content/File';\nimport Parser from 'rss-parser';\n\n\nimport {getFeeds} from '../../services/Content/Rss';\n\n// const RSS_URL = 'https://g1.globo.com/rss/g1/pop-arte/';\n// const RSS_URL = 'http://noticias.r7.com/economia/feed.xml';\nconst RSS_URL = '';\n\nconst useStyles = makeStyles((theme) => ({\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n}));\n\nexport default function CardSourceUpModal({statusModal, handleClose}) {\n  const classes = useStyles();\n\n  const [open, setOpen] = React.useState(false);\n  const [rssLink, setTextRssLink] = React.useState(RSS_URL);\n\n  const handleRssText = (e) => {\n    setTextRssLink(e.target.value);\n  }\n\n  const downloadFormat1 = async() => {\n    const format = {\"cards\":[{\"id\":\"...\",\"name\":\"...\",\"author\":\"...\",\"thumb\":\"...\",\"image\":\"...\",\"url\":\"...\",\"description\":\"....\",\"category\":\"...\",\"active\":true,\"items\":[{\"title\":\"...\",\"pubDate\":\"2021-07-01 17:55:26\",\"link\":\"\",\"author\":\"\",\"thumbnail\":\"\"}]}]};\n    await sendDownload('card-format1.json', format);\n  }\n\n  const loadRssButton = async () => {\n    let Source = await getFeeds(rssLink);\n\n    Source['thumb'] = 'leak_add';\n    Source['thumbColor'] = 'orange';\n    Source['name'] = 'Rss';\n\n    handleClose('rss', Source);\n  }\n\n  const loadFileRssContent = (file) => {\n    const reader = new FileReader()\n    reader.onload = async (e) => { \n      const contents = e.target.result;\n\n      let parser = new Parser();\n\n      parser.parseString(contents, function(opc, rssParsed){\n        const d = new Date();\n        const data = {\n          items : stripAllArray(rssParsed['items']),\n          thumb      : 'leak_add',\n          description: 'Extracted : '+\n            d.getFullYear()+'-'+d.getMonth()+'-'+d.getDay()+'-'+d.getHours(),\n          name       : rssParsed['title'],\n          thumbColor : 'red',\n          category   : 'rss',\n          url        : rssParsed['feedUrl'],\n        };\n        handleClose('rss', data)\n      })\n\n    };\n    reader.readAsText(file)\n  }\n\n  const stripAllArray = (array) => {\n\n    for(let a in array){\n\n      let type = typeof array[a];\n\n      if(type === 'object'){\n        array[a] = stripAllArray(array[a])\n      }else if(typeof array[a] ===  'string'){\n        array[a] = array[a].replace(/(<([^>]+)>)/gi, \"\").trim(); \n      }\n    }\n    return array;\n  }\n\n  const loadCardContent = (file) => {\n      const reader = new FileReader()\n      reader.onload = async (e) => { \n        const json = JSON.parse(e.target.result);\n        json['thumb'] = 'archive';\n        json['thumbColor'] = 'blue';\n        json['category'] = 'card';\n\n        handleClose('card', json)\n      };\n      reader.readAsText(file)\n  }\n\n  const handleChange = (files) => {\n\n    if(files[0]){\n      let file     = files[0];\n      file.date    = new Date();\n\n      switch (file.type) {\n        case 'text/xml':\n          loadFileRssContent(file);\n          break;\n        case 'application/json':\n          loadCardContent(file);\n          break;\n        default:\n          alert('Formato não permitido')\n      }\n    }\n  }\n\n  useEffect(()=>{\n    setOpen(statusModal)\n  },[statusModal])\n\n  return (\n    <div>\n      <Modal\n        aria-labelledby=\"transition-modal-title\"\n        aria-describedby=\"transition-modal-description\"\n        className={classes.modal}\n        open={open}\n        onClose={() => handleClose(false)}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500,\n        }}\n      >\n        <Fade in={open}>\n          <div className={classes.paper}>\n            <form className={classes.root} noValidate autoComplete=\"off\">\n              <Grid container spacing={1}>\n                <Grid item xs={10} md={10}>\n                  <TextField \n                    onChange={handleRssText} \n                    id=\"standard-basic\" \n                    label=\"Link Rss\" \n                    fullWidth\n                    value={rssLink}/>\n                </Grid>\n                <Grid xs={2} md={2} item>\n                  <br/>\n                  <Button  onClick={loadRssButton} variant=\"contained\">\n                    Adicionar\n                  </Button>\n                </Grid>\n              </Grid>\n            </form>\n            <Typography variant=\"h5\" component=\"h2\">\n              <center>Ou</center>\n            </Typography>\n            <Typography variant=\"h5\" component=\"h2\">\n              adicione um arquivo abaixo no formato correto abaixo \n            </Typography>\n            <DropzoneArea\n              onChange={handleChange}\n            />\n            <p></p>\n            {/* <Typography variant=\"body2\" gutterBottom>\n              <i>arquivo txt com conteúdo para importar um documento só</i>\n            </Typography> */}\n            <Typography variant=\"body2\" gutterBottom>\n              <Button onClick={downloadFormat1} variant=\"outlined\" color=\"secondary\">\n                <b>* Formato 2 </b>\n              </Button>\n              <i>\n                Para importar um card completo\n              </i>\n            </Typography>\n          </div>\n        </Fade>\n      </Modal>\n    </div>\n  );\n}","import React from \"react\";\nimport {\n    Grid,\n} from \"@material-ui/core\";\n\nimport Typography from \"@material-ui/core/Typography\";\nimport {FormattedMessage} from 'react-intl';\n\nimport CardSource from '../cards/CardSource.jsx';\nimport CardSourceSetModal from '../cards/CardSourceSetModal.jsx';\nimport CardSourceUpModal from '../cards/CardSourceUpModal.jsx';\nimport {sendDownload} from '../../services/Content/File';\n\nexport default function SourceContents({cardsInput, setCardsInput}) {\n\n  const [openModalUpSource, setOpenModalUpSource]   = React.useState(false);\n  const [openModalSetSource, setOpenModalSetSource]   = React.useState(false);\n  const [indiceAtivo, setIndiceAtivo]           = React.useState(0);\n\n  const handleDeleteCard = async () => {\n    let newCards = [...cardsInput];\n    newCards.splice(0, 1);\n    setCardsInput(newCards)\n    setOpenModalSetSource(false);\n  }\n\n  const handleDownloadCard = async () => {\n    await sendDownload('card-format1.json', cardsInput[indiceAtivo].attrs);\n  }\n\n  const handleCloseModalUpSource = (type, data) => {\n\n    if(!type){\n      setOpenModalUpSource(false);\n      return false;\n    }\n    let newCards = cardsInput;\n\n    data['category'] = type;\n    data['status'] = 'active';\n    data['active'] = true;\n\n    newCards[indiceAtivo].fill(data);\n\n    setCardsInput(newCards);\n    setOpenModalUpSource(false);\n  };\n\n  const handleUpdCard = (indice, $item) => {\n    let newCards = [...cardsInput];\n    newCards[indice] = $item;\n    setCardsInput(newCards);\n  };\n\n  const handleOpenModalUpSource = (indice) => {\n    setIndiceAtivo(indice)\n    setOpenModalUpSource(true);\n  };\n\n  const handleOpenSetModal = (indice) => {\n    setIndiceAtivo(indice)\n    setOpenModalSetSource(true);\n  };\n\n  const handleCloseModalSetSource = (data) => {\n    setOpenModalSetSource(false);\n  }\n\n  return (\n    <div>\n      <Typography variant=\"h5\" gutterBottom>\n        <FormattedMessage id=\"app.Data\"/>\n      </Typography>\n      <br/>\n      <Grid container spacing={0}>\n        {cardsInput.map((card, index) => {\n          return (\n            <Grid item key={'CardSourcegrid-'+index}>\n              <CardSource \n               indice={index} \n               handleUpdCard={handleUpdCard} \n               handleOpenModal={handleOpenModalUpSource}\n               handleOpenSetModal={handleOpenSetModal} \n               sourceObj={card}/>\n            </Grid>\n          )\n        })}\n      </Grid>\n      <CardSourceUpModal \n        handleClose={handleCloseModalUpSource} \n        statusModal={openModalUpSource}\n      />\n      <CardSourceSetModal \n        handleClose={handleCloseModalSetSource} \n        handleDownloadCard={handleDownloadCard} \n        handleDeleteCard={handleDeleteCard} \n        statusModal={openModalSetSource}\n      />\n    </div>\n  )\n}","export function calcTfIdfCards (cards, configToken = {}, configFilter = {}) {\n\n  let results = [];\n\n  for(let a in cards){\n    if(cards[a].get('status') !== 'new' && cards[a].get('active')){\n      let tf = extractTfAllDocuments(cards[a], configToken, configFilter.targetField);\n      let dataCard = {\n        'idCard' : cards[a].get('id'),\n        'category' : cards[a].get('category'),\n        'tf'  : tf,\n        'idf' : defineIdf(tf)\n      }\n      results.push(dataCard);\n    }\n  }\n\n  calcTfIDFFromTfCard(results)\n  return results;\n}\n\nfunction calcTfIDFFromTfCard(dataTreated)\n{\n  dataTreated.forEach((card, cardIndex) => {\n\n    dataTreated[cardIndex]['tf-idf'] = [];\n\n    for(let a in card['tf']){\n\n      let newResults = []\n\n      let dataSet = card['tf'][a]['results'];\n\n      for(let d in dataSet){\n        if(dataTreated[cardIndex]['idf'][d]){\n          let tfidf = dataSet[d] * dataTreated[cardIndex]['idf'][d];\n\n            newResults.push({\n              term : d,\n              value : tfidf\n            })\n        }\n      }\n\n      dataTreated[cardIndex]['tf-idf'].push({\n        results   : newResults,\n        posItem   : card['tf'][a].posItem,\n        pubDate   : card['tf'][a].pubDate,\n        categories: card['tf'][a].categories,\n        author    : card['tf'][a].author\n      });\n    }\n  })\n}\n\nfunction extractTfAllDocuments(card, configToken, propertyChoosed)\n{\n  let items = card.get('items');\n  let results = [];\n\n  for(let i in items){\n  // \n    let termsCaseTreated = makeTokens(configToken, items[i][propertyChoosed]);\n\n    results.push({\n      'results' : calcTf(\n        addTermsToDictionary(termsCaseTreated, {}, 2)\n      ),\n      'posItem' : i,\n      'author' :  items[i]['author'],\n      'categories' :  chooseCategories(items[i]['categories']),\n      'pubDate' : items[i]['pubDate'] || ''\n    })\n  }\n  return results;\n}\n\nfunction chooseCategories($field){\n  if(typeof $field === 'object'){\n    return $field.join('-');\n  }else{\n    return $field || '';\n  }\n}\n\nfunction addTermsToDictionary(terms, dictionary){\n  for(let a in terms){\n\n    if(terms[a] === ''){ continue; }\n\n    if(dictionary[terms[a]]){\n      dictionary[terms[a]] = dictionary[terms[a]] + 1; \n    }else{\n      dictionary[terms[a]] = 1; \n    }\n  }\n  return dictionary;\n}\n\nfunction calcTf(words){\n  let tf = {};\n  let wordsLength = Object.keys(words).length;\n\n  for(let a in words){\n    tf[a] = words[a] / wordsLength;\n  }\n  return tf;\n}\n\nfunction defineIdf(tfResults){\n\n  let wordsPerText = {};\n  let idf = {};\n\n  let qtdTexts = Object.keys(tfResults).length;\n\n  for(let a in tfResults){\n    addTermsToDictionary(Object.keys(tfResults[a]['results']), wordsPerText)\n  }\n\n  for(let a in wordsPerText){\n    idf[a] = Math.log(qtdTexts / wordsPerText[a]);\n  }\n\n  return idf;\n}\n\nfunction makeTokens(args, text = '')\n{\n  let fieldData = text.replace(/&lt;/g, '<', 'g');\n  fieldData = fieldData.replace(/&gt;/g, \">\");\n  fieldData = fieldData.replace(/<[^>]*>/gi, \"\").trim();\n  let fieldDatawithoutInvisible = fieldData.replace(/[\\u0000-\\u001F\\u007F-\\u009F]/g, '');\n\n  let divider   = args['divider'];\n  let textCase  = args['case'] ? args['case'] : null;\n  let minLength = args['minLength'] ? args['minLength'] : 1;\n  let ngrams    = args['ngrams'] ? args['ngrams'] : 1;\n  \n  let choosedFieldFiltered = fieldDatawithoutInvisible.trim();\n  var expression           = new RegExp(divider, 'gi');\n  let termsSplited         = choosedFieldFiltered.split(expression);\n  \n  let termsMinLength = [];\n\n  for(let i in termsSplited){\n    if(termsSplited[i].length >= minLength){\n      termsMinLength.push(termsSplited[i])\n    }\n  }\n      \n  let termsCaseTreated = termsMinLength.map(\n    (item) => \n      textCase === 'lower' ?\n        item.toLowerCase() : textCase === 'upper' ?\n          item.toUpperCase() : item\n  );\n\n  let stopWords = args['stopWords'].split(',');\n\n  let dataWithNgrams = applyNgrams(\n    applyStopWords(stopWords, termsCaseTreated),\n    ngrams\n  );\n\n\n  let finalData = !args['stopWords'] ? \n    dataWithNgrams : \n    applyStopWords(stopWords, dataWithNgrams);\n\n  return finalData;\n}\n\nfunction applyStopWords(stopWords, arrayOfSplitedData){\n  return arrayOfSplitedData.filter((term) => { \n    for(let a in stopWords){\n      if(stopWords[a] === term){\n        return false;\n      }\n    }\n    return true;\n  });\n}\n\nfunction applyNgrams(arrayOfSplitedData, ngrams){\n  let newArray = [];\n  for(let a = 0; a + ngrams < arrayOfSplitedData.length; ++a){\n    let newString = '';\n    for(let i = 0; i  < ngrams; ++i){\n      newString += (i === 0 ? '' : ' ') + arrayOfSplitedData[a + i];\n    }\n    newArray.push(newString);\n  }\n  return newArray;\n}","import React, { useEffect, useState } from \"react\";\r\n\r\nimport {\r\n  Button\r\n} from \"@material-ui/core\";\r\n\r\nimport moment from 'moment'\r\n\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { calcTfIdfCards } from '../../services/Ai/TfIdf.js';\r\n\r\n\r\nexport default function CalcPanel({ \r\n  modelTree,\r\n  modelTree2,\r\n  setModelTree,\r\n  setModelTree2,\r\n  cardsInput, \r\n  configToken, \r\n  configFilter,\r\n  setResults\r\n}) {\r\n\r\n  const [tfIdf, setTfIdf] = useState([]);\r\n\r\n  const [limitCount] = useState(10);\r\n  const [similarityList, setSimilarityList] = useState('');\r\n\r\n  useEffect(() => {\r\n    calcAll();\r\n  }, [tfIdf])\r\n\r\n  let selectedWeek = {\r\n    0: [],\r\n    1: [],\r\n    2: [],\r\n    3: [],\r\n    4: [],\r\n    5: [],\r\n    6: [],\r\n  };\r\n\r\n  const execCalcs = () => {\r\n    let data = calcTfIdfCards(cardsInput, configToken, configFilter)\r\n    setTfIdf(data);\r\n  }\r\n\r\n  const calcAll = () => {\r\n    let counts = {\r\n      countWordsGenerated: 0,\r\n      countWordsUsed: 0,\r\n      countDocuments: 0,\r\n      countFonts: 0,\r\n    };\r\n\r\n    let minValueTfIdf;\r\n    let maxValueTfIdf;\r\n    let cutTfIdf = 0;\r\n    let cutTreeData = 0;\r\n    let selectedAll = [];\r\n    let selectedHours = [];\r\n    let selectedPostsTime = {};\r\n\r\n    counts['dataTree'] = [];\r\n\r\n    tfIdf.forEach((card, cardIndex) => {\r\n      ++counts['countFonts'];\r\n\r\n      card['tf-idf'].forEach((cardTfIdf) => {\r\n        let results = cardTfIdf['results'];\r\n\r\n        ++counts['countDocuments'];\r\n        counts['countWordsGenerated'] = counts['countWordsGenerated'] + results.length;\r\n\r\n        results.sort(function (a, b) { return b['value'] - a['value'] })\r\n\r\n        minValueTfIdf = minValueTfIdf < results[results.length - 1]['value'] ?\r\n          minValueTfIdf : results[results.length - 1]['value'];\r\n\r\n        maxValueTfIdf = maxValueTfIdf > results[0]['value'] ?\r\n          maxValueTfIdf : results[0]['value'];\r\n\r\n        let slicedResults = results.slice(0, limitCount);\r\n        let day = new Date(cardTfIdf.pubDate).getDay();\r\n        let hour = new Date(cardTfIdf.pubDate).getHours();\r\n\r\n\r\n        slicedResults.forEach((item, index) => {\r\n          item['idCard'] = card['idCard'];\r\n          item['posItem'] = cardTfIdf['posItem'];\r\n          item['id'] = item['posItem']+'-'+card['idCard'];\r\n          item['dataPub'] = cardTfIdf['pubDate'];\r\n          item['categories'] = cardTfIdf['categories'];\r\n          item['author'] = cardTfIdf['author'];\r\n          item['day'] = day;\r\n          item['hour'] = hour;\r\n          slicedResults[index] = item\r\n        })\r\n\r\n        selectedAll = selectedAll.concat(slicedResults);\r\n\r\n        selectedWeek[day] = selectedWeek[day] = slicedResults;\r\n        selectedHours[hour] = selectedHours[hour] ?\r\n          selectedHours[hour].concat(slicedResults) : slicedResults\r\n\r\n        if (!selectedPostsTime[hour]) {\r\n          selectedPostsTime[hour] = 0;\r\n        }\r\n        ++selectedPostsTime[hour];\r\n      })\r\n    })\r\n\r\n    let percentCutTFIDF = configFilter?.idfCut || 50;\r\n    let percentCutTree = configFilter?.treeCut || 50;\r\n\r\n    cutTfIdf = Math.round((selectedAll.length * percentCutTFIDF) / 100);\r\n\r\n    selectedAll = selectedAll.sort(function (a, b) { return a['value'] - b['value'] })\r\n    selectedAll.splice(0, cutTfIdf);\r\n\r\n    cutTreeData = Math.round((selectedAll.length * percentCutTree) / 100);\r\n\r\n    let dataToTreeFirstSelected = [];\r\n\r\n    for(let z in selectedAll){\r\n      let item = selectedAll[z]\r\n      if(z > cutTreeData){\r\n        dataToTreeFirstSelected.push(item);\r\n      }\r\n    }\r\n    counts['countWordsUsedTree'] = dataToTreeFirstSelected.length\r\n\r\n    let dataToTree        = [];\r\n    let dataToTree2_byDoc = {};\r\n    let dataToTree2       = [];\r\n    let dataToTree2_keys  = [];\r\n    \r\n    // console.log(configFilter)\r\n    // console.log(configFilter?.termSecondTree)\r\n    // console.log(configToken)\r\n    for(let z in selectedAll){\r\n      let item = selectedAll[z]\r\n      for(let x in dataToTreeFirstSelected){\r\n        if(dataToTreeFirstSelected[x]['term'] === item['term']){\r\n          item['hour'] = item['hour']+':00h'\r\n          item['day'] = getDayName(item['day'])\r\n          dataToTree.push(item);\r\n\r\n\r\n          if(configFilter?.termSecondTree){\r\n            if(!dataToTree2_byDoc[item['id']]){\r\n              dataToTree2_byDoc[item['id']] = [];\r\n            }\r\n            dataToTree2_keys[item['term']] = false;\r\n            dataToTree2_byDoc[item['id']].push(item['term'])\r\n          }\r\n\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    if(configFilter?.termSecondTree){\r\n      let termoEscolhidoParaSegundaArvore = configFilter?.termSecondTree\r\n\r\n      for(let i in dataToTree2_byDoc){\r\n        let part = {};\r\n        let possuiOTermo = false;\r\n\r\n        for(let b in dataToTree2_byDoc[i]){\r\n          part[dataToTree2_byDoc[i][b]] =  dataToTree2_byDoc[i][b];\r\n        }\r\n        // console.log(part)\r\n        // dataToTree2.push({...part});\r\n\r\n        for(let p in part){\r\n        // dataToTree2.push({...part});\r\n          if(termoEscolhidoParaSegundaArvore == p){\r\n            dataToTree2.push({...part, '000class##1' : true});\r\n          }else{\r\n            dataToTree2.push({...part, '000class##1' : false});\r\n          }\r\n        }\r\n        // if(termoEscolhidoParaSegundaArvore == p){\r\n        //   possuiOTermo = true;\r\n        //   break\r\n        // }\r\n        // dataToTree2.push({...{...dataToTree2_keys, ...part}, '000class##1' : possuiOTermo}); \r\n      }\r\n    }\r\n\r\n    let keys = Object.keys(dataToTree2_keys)\r\n\r\n    counts['countWordsUsed'] = selectedAll.length\r\n\r\n    const selectedAllWihtoutDuplicates = selectedAll.filter(function (item, pos, arrayContent) {\r\n      for (let a in arrayContent) {\r\n        if (pos !== a &&\r\n          item.term === arrayContent[a].term &&\r\n          item.value < arrayContent[a].value) {\r\n          return false\r\n        }\r\n      }\r\n      return true;\r\n    })\r\n\r\n    let results = {\r\n      modelTree           : calcDataTree(dataToTree),\r\n      modelTree2          : calcDataTree2(dataToTree2, keys),\r\n      countWordsUsedTree  : counts['countWordsUsedTree'],\r\n      countWordsGenerated : counts['countWordsGenerated'],\r\n      countWordsUsed      : counts['countWordsUsed'],\r\n      countDocuments      : counts['countDocuments'],\r\n      countFonts          : counts['countFonts'],\r\n      plotDataPostTime    : selectedPostsTime,\r\n      plotDataWeek        : selectedWeek,\r\n      plotDataHours       : selectedHours,\r\n      plotDataHours       : selectedHours,\r\n      plotDataAll         : selectedAllWihtoutDuplicates,\r\n    };\r\n\r\n    if (configFilter['targetCardForComparison']) {\r\n      let similarity = compareSources();\r\n      setSimilarityList(similarity);\r\n      results[similarityList] = similarity;\r\n    }\r\n\r\n    setResults(results);\r\n  }\r\n\r\n\r\n  const getDayName = (num) => {\r\n    switch (num) {\r\n      case 0:\r\n        return 'segunda';\r\n      case 1:\r\n        return 'Terça';\r\n      case 2:\r\n        return 'Quarta';\r\n      case 3:\r\n        return 'Quinta';\r\n      case 4:\r\n        return 'Sexta';\r\n      case 5:\r\n        return 'Sábado';\r\n      case 6:\r\n        return 'Domingo';\r\n      default :\r\n        console.log('('+num+ ') Não é um número de dia da semana aceitável')\r\n        break;\r\n    }\r\n  }\r\n\r\n  const getVectorFormat = () => {\r\n    let vectorFormat = [];\r\n    tfIdf.forEach((card, cardIndex) => {\r\n\r\n      card['tf-idf'].forEach((cardTfIdf) => {\r\n\r\n        let results = cardTfIdf['results'];\r\n\r\n        results.forEach((result) => {\r\n\r\n          let unique = true;\r\n          vectorFormat.forEach((item) => {\r\n\r\n            if (item['term'] === result['term'].toLowerCase()) {\r\n              unique = false;\r\n            }\r\n          })\r\n\r\n          if (unique) {\r\n            vectorFormat.push({ 'term': result['term'].toLowerCase(), value: 0 });\r\n          }\r\n        })\r\n      })\r\n    })\r\n\r\n    return vectorFormat;\r\n  }\r\n\r\n  function shuffle(array) {\r\n    let currentIndex = array.length, randomIndex;\r\n\r\n    // While there remain elements to shuffle...\r\n    while (currentIndex !== 0) {\r\n\r\n      // Pick a remaining element...\r\n      randomIndex = Math.floor(Math.random() * currentIndex);\r\n      currentIndex--;\r\n\r\n      // And swap it with the current element.\r\n      [array[currentIndex], array[randomIndex]] = [\r\n        array[randomIndex], array[currentIndex]];\r\n    }\r\n\r\n    return array;\r\n  }\r\n\r\n\r\n  const calcDataTree2 = (data, keys) => {\r\n\r\n    // console.log([...data])\r\n    // console.log(configFilter?.termSecondTree)\r\n\r\n    if(data.length <= 0 || !configFilter?.termSecondTree){\r\n      return false;\r\n    }else if(data.length < 2){\r\n      alert('Não existem elementos o sufuciente para montar a árvore de decisão')\r\n      return false;\r\n    }\r\n\r\n    var DecisionTree = require('decision-tree');\r\n\r\n    data = shuffle(data)\r\n    const totalCountData = data.length;\r\n    let countTrainable = (totalCountData * configFilter.percentTrain / 100)\r\n\r\n    var class_name    = \"000class##1\";\r\n    // var class_name    = configFilter?.termSecondTree;\r\n    let training_data = [];\r\n    let test_data     = [];\r\n\r\n    var features = keys;\r\n    var dt;\r\n\r\n    // if(Object.keys(modelTree2).length === 0 ){\r\n    //   console.log(1)\r\n      training_data = data.slice(0, countTrainable);\r\n      test_data = data.slice(countTrainable);\r\n      dt = new DecisionTree(training_data, class_name, features);\r\n    // }else{\r\n    //   console.log(2)\r\n    //   dt = new DecisionTree(modelTree2.modelTree);\r\n    //   test_data = data;\r\n    // }\r\n\r\n    // console.log(JSON.stringify(test_data))\r\n    var accuracy = dt.evaluate(test_data);\r\n    let modelInJson = dt.toJSON();\r\n    // if(\r\n    //     Object.keys(modelTree2).length === 0 || \r\n    //     configFilter.percentTrain !== modelTree2.modelTree.percentTrain\r\n    //   ){\r\n      modelInJson.date = moment(new Date()).format('Y-MM-DD HH:mm:ss');\r\n      modelInJson.percentTrain = configFilter.percentTrain;\r\n    // }else{\r\n    //   console.log(modelTree2)\r\n    //   modelInJson.date = modelTree2.modelTree.date;\r\n    //   modelInJson.percentTrain = modelTree2.modelTree.percentTrain;\r\n    // }\r\n\r\n    let model = {\r\n      accuracy: accuracy,\r\n      modelTree: modelInJson\r\n    };\r\n\r\n    setModelTree2(model);\r\n    return model;\r\n  }\r\n\r\n  const calcDataTree = (data) => {\r\n        \r\n    if(data.length <= 0){\r\n      return false;\r\n    }else if(data.length < 2){\r\n      alert('Não existem elementos o sufuciente para montar a árvore de decisão')\r\n      return false;\r\n    }\r\n\r\n    var DecisionTree = require('decision-tree');\r\n\r\n    data = shuffle(data)\r\n    const totalCountData = data.length;\r\n    let countTrainable = (totalCountData * configFilter.percentTrain / 100)\r\n\r\n    var class_name    = \"term\";\r\n    let training_data = [];\r\n    let test_data     = [];\r\n\r\n    var features = ['hour', \"day\"];\r\n    // var features = [\"day\", \"term\"];\r\n    var dt;\r\n\r\n    if(Object.keys(modelTree).length === 0 ){\r\n      training_data = data.slice(0, countTrainable);\r\n      test_data = data.slice(countTrainable);\r\n      dt = new DecisionTree(training_data, class_name, features);\r\n    }else{\r\n      dt = new DecisionTree(modelTree.modelTree);\r\n      test_data = data;\r\n    }\r\n\r\n    var accuracy = dt.evaluate(test_data);\r\n    let modelInJson = dt.toJSON();\r\n\r\n    if(\r\n        Object.keys(modelTree).length === 0 || \r\n        configFilter.percentTrain !== modelTree.modelTree.percentTrain\r\n      ){\r\n      modelInJson.date = moment(new Date()).format('Y-MM-DD HH:mm:ss');\r\n      modelInJson.percentTrain = configFilter.percentTrain;\r\n    }else{\r\n      modelInJson.date = modelTree.modelTree.date;\r\n      modelInJson.percentTrain = modelTree.modelTree.percentTrain;\r\n    }\r\n    let model = {\r\n      accuracy: accuracy,\r\n      modelTree: modelInJson\r\n    };\r\n\r\n    setModelTree(model);\r\n    return model;\r\n  }\r\n\r\n  const formatDocumentsWithVectors = (vectorFormat) => {\r\n\r\n    let cardChoosed = null;\r\n    let cardsToCompare = [];\r\n    let formatToDecript = JSON.stringify(vectorFormat);\r\n\r\n    tfIdf.forEach((card, cardIndex) => {\r\n\r\n      let cardsToCompareVector = {\r\n        idCard: card['idCard'],\r\n        docsWithVector: [],\r\n      }\r\n\r\n      card['tf-idf'].forEach((cardTfIdf) => {\r\n\r\n        let document = {\r\n          'vector': [],\r\n          'pubDate': cardTfIdf['pubDate'],\r\n          'postItem': cardTfIdf['posItem']\r\n        }\r\n        let newVector = JSON.parse(formatToDecript);\r\n\r\n        cardTfIdf['results'].forEach((result) => {\r\n          newVector.forEach((item, index) => {\r\n            if (item['term'] === result['term'].toLowerCase()) {\r\n              newVector[index]['value'] = result['value'];\r\n            }\r\n          })\r\n        })\r\n        document['vector'] = newVector;\r\n        cardsToCompareVector['docsWithVector'].push(document);\r\n      })\r\n\r\n      if (card['idCard'] === configFilter['targetCardForComparison']) {\r\n        cardChoosed = { ...cardsToCompareVector };\r\n      } else {\r\n        cardsToCompare.push(cardsToCompareVector);\r\n      }\r\n    })\r\n    return [cardChoosed, cardsToCompare]\r\n  }\r\n\r\n  const calcMagnitudeVector = (vector) => {\r\n    return Math.sqrt(vector.reduce((acumulator, value) => {\r\n      return value ** 2 + acumulator;\r\n    }))\r\n  }\r\n\r\n  const calcCosSimilarity = (vector1, magnitude1, vector2) => {\r\n    let product = 0;\r\n\r\n    vector1.forEach((vector1Item, indexVector1) => {\r\n      product += vector1Item * vector2[indexVector1];\r\n    })\r\n\r\n    let magnitude2 = calcMagnitudeVector(vector2);\r\n\r\n    return product / (magnitude1 * magnitude2)\r\n  }\r\n\r\n  const compareSources = (choosedSource) => {\r\n\r\n    let [cardChoosed, cardsToCompare] = formatDocumentsWithVectors(getVectorFormat())\r\n\r\n    let choosed = cardChoosed['docsWithVector'].map(item => {\r\n      let vector = item['vector'].map((item) => {\r\n        return item['value'];\r\n      });\r\n      return {\r\n        vector: vector,\r\n        magnitude: calcMagnitudeVector(vector)\r\n      };\r\n    });\r\n\r\n    let similarity = {};\r\n\r\n    cardsToCompare.forEach((item) => {\r\n      let vectorToCompare = item['docsWithVector'].map(item => {\r\n        let vector = item['vector'].map((item) => {\r\n          return item['value'];\r\n        });\r\n        return {\r\n          vector: vector,\r\n          magnitude: calcMagnitudeVector(vector)\r\n        };\r\n      });\r\n\r\n      let listResults = [];\r\n\r\n      choosed.forEach((itemChoosed) => {\r\n        let listFirstResult = vectorToCompare.map(item => {\r\n          return calcCosSimilarity(\r\n            itemChoosed['vector'],\r\n            itemChoosed['magnitude'],\r\n            item['vector']\r\n          );\r\n        });\r\n        listFirstResult.sort((a, b) => b - a);\r\n        listResults.push(listFirstResult[0])\r\n      })\r\n\r\n      similarity[item['idCard']] = {\r\n        listResults: listResults,\r\n        mean: listResults.reduce((acumulator, value) => {\r\n          return value + acumulator;\r\n        }) / listResults.length\r\n      }\r\n    });\r\n\r\n    return similarity;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n        <br></br>\r\n      <Typography variant=\"h5\" gutterBottom>\r\n        <FormattedMessage id=\"app.Calcs\" />\r\n        <br></br>\r\n        <Button variant=\"contained\" onClick={execCalcs} color=\"primary\" style={{ margin: '0 5px' }}>\r\n          Executar Cálculos\r\n        </Button>\r\n      </Typography>\r\n        <br></br>\r\n    </div>\r\n  )\r\n}","import {Component} from 'react';\n\nexport default class EntityAbstract extends Component {\n\n  get(key){\n    return this.attrs[key];\n  }\n\n  set(key, value){\n    this.attrs[key] = value;\n  }\n\n  fill(data){\n    for(let i in this.attrs){\n      if(data[i]){\n        this.attrs[i] = data[i]\n      }\n    }\n  }\n\n  toArray(){\n    return this.attrs;\n  }\n}","import EntityAbstract from './EntityAbstract.jsx';\nimport { v4 as uuidv4 } from 'uuid';\n\nexport default class SourceEntity extends EntityAbstract\n{\n  constructor(data = []){\n    super();\n    this.attrs = {\n      id         : uuidv4(),\n      name       : 'Novo Conteúdo',\n      author     : '',\n      thumb      : 'add',\n      thumbColor : 'gray',\n      image      : '',\n      url        : '',\n      description: '',\n      category   : '',\n      active     : true,\n      items      : [],\n      created    : '',\n      status     : 'new' // new, loaded, error\n    }\n    if(data){\n      this.fill(data);\n    }\n  }\n}","import React, { useEffect } from \"react\";\r\n\r\nimport {\r\n  Grid, \r\nTextField,\r\n  Button,\r\n} from \"@material-ui/core\";\r\n\r\nimport moment from 'moment'\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { FormattedMessage } from 'react-intl';\r\nimport {DropzoneArea} from 'material-ui-dropzone'\r\n\r\nimport {sendDownload} from '../../services/Content/File';\r\n\r\nimport SourceEntity from '../../entities/SourceEntity.js'\r\n\r\nexport default function ConfigPanel({\r\n  configInput, \r\n  configToken,\r\n  cardsInput, \r\n  modelTree,\r\n  modelTree2,\r\n  setModelTree,\r\n  setModelTree2,\r\n  setConfigFilterCallback,\r\n  setCardsSourceCallback,\r\n  setConfigTokenCallback\r\n}) {\r\n\r\n  const [config, setConfig] = React.useState(configInput);\r\n  const [fileInfo, setFileData] = React.useState(null);\r\n  const [qtdColsInfo] = React.useState(3);\r\n\r\n    useEffect(() => {\r\n      setConfig({...configInput})\r\n    }, [configInput])\r\n\r\n  const fillFileInfo = (file) => {\r\n    if(file){\r\n      setFileData([\r\n        {\"key\" : 'name'    , \"value\" : file.name},\r\n        {\"key\" : 'size'    , \"value\" : file.size},\r\n        {\"key\" : 'type'    , \"value\" : file.type},\r\n        {\"key\" : 'included', \"value\" : moment(file.date).format('HH:mm DD/MM/Y')},\r\n      ]);\r\n    }\r\n  }\r\n\r\n  const handleUpdConfig = (key, value) => {\r\n    let newConfig = {...config};\r\n    newConfig[key] = value;\r\n    setConfigFilterCallback(newConfig)\r\n  }\r\n\r\n  const handleChange = (files) => {\r\n\r\n    if(!files[0]){ return false; }\r\n\r\n    let file     = files[0];\r\n    file.date    = new Date();\r\n    const reader = new FileReader()\r\n\r\n    reader.onload = async (e) => { \r\n      const text = (e.target.result);\r\n\r\n      loadFileConfig(JSON.parse(text))\r\n      fillFileInfo(file);\r\n    };\r\n    reader.readAsText(file)\r\n  }\r\n\r\n  const loadFileConfig = async (data) => \r\n  {\r\n    if(data?.config){\r\n      setConfigFilterCallback(data['config']);\r\n    }\r\n    if(data?.cards){\r\n      for(let i in data['cards']){\r\n        data['cards'][i] = new SourceEntity(data['cards'][i])\r\n      }\r\n      setCardsSourceCallback([...data['cards']]);\r\n    }\r\n    if(data?.configToken){\r\n      setConfigTokenCallback(data['configToken']);\r\n    }\r\n    if(data?.modelTree){\r\n      setModelTree(data.modelTree);\r\n    }\r\n    if(data?.modelTree2){\r\n      setModelTree2(data.modelTree2);\r\n    }\r\n  }\r\n\r\n  const sendBackUpToDownload = async () => {\r\n    await sendDownload('data-guide-press.json', generateBackUpData());\r\n  }\r\n\r\n  const generateBackUpData = () => {\r\n\r\n    let cardsData = [];\r\n\r\n    for(let i in cardsInput){\r\n      if(cardsInput[i].get('status') !== 'new'){\r\n        cardsData.push( cardsInput[i].attrs );\r\n      }\r\n    }\r\n\r\n    let data = {\r\n      \"config\"     : configInput,\r\n      \"configToken\": configToken,\r\n      \"cards\"      : cardsData,\r\n      \"modelTree\" : modelTree,\r\n      \"modelTree2\" : modelTree2\r\n    };\r\n    return data;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Typography variant=\"h5\" gutterBottom>\r\n        <FormattedMessage id=\"app.loadOrDownloadData\" />\r\n      </Typography>\r\n\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={2} md={2} sm={2}>\r\n          <Button variant=\"contained\" onClick={sendBackUpToDownload} color=\"primary\">\r\n            Download Base Completa\r\n          </Button>\r\n          <TextField \r\n            onChange={(event) => handleUpdConfig('rssHostDownload1', event.target.value)}\r\n            id=\"standard-basic\" \r\n            label=\"Link Rss\" \r\n            fullWidth\r\n            value={config.rssHostDownload1}\r\n            />\r\n          <TextField \r\n            onChange={(event) => handleUpdConfig('rssHostParam1', event.target.value)}\r\n            id=\"standard-basic\" \r\n            label=\"Param Rss\" \r\n            fullWidth\r\n            value={config.rssHostParam1}\r\n            />\r\n\r\n        </Grid>\r\n\r\n        <Grid item xs={4} md={4} sm={4} >\r\n          <DropzoneArea\r\n            filesLimit={1}\r\n            dropzoneText={\"Aqui coloca o arquivo\"}\r\n            showPreviews={false}\r\n            acceptedFiles={['application/json']}\r\n            showPreviewsInDropzone={false}\r\n            onChange={handleChange}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={5} md={5} sm={5}>\r\n          <Grid container spacing={2} align = \"center\" justifyContent = \"center\" alignItems = \"center\">\r\n            {!fileInfo  ? \r\n              'Conteúdo não carregado'\r\n              :\r\n              fileInfo.map((item, index) => { \r\n              return (\r\n                <React.Fragment key={'info-'+index}>\r\n                  <Grid item xs={qtdColsInfo} md={qtdColsInfo} sm={qtdColsInfo}>\r\n                    <b>{ item.key }</b>\r\n                  </Grid>\r\n                  <Grid item xs={qtdColsInfo} md={qtdColsInfo} sm={qtdColsInfo}>\r\n                    {item.value}\r\n                  </Grid>\r\n                </React.Fragment>\r\n              )\r\n            })}\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  )\r\n}","import React, { useEffect } from \"react\";\r\n\r\nimport {\r\n  Grid, \r\n  TextField,\r\n  Select,\r\n} from \"@material-ui/core\";\r\n\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { FormattedMessage, useIntl } from 'react-intl';\r\nimport FormControl from '@material-ui/core/FormControl';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  labelUp: {\r\n    ...theme.typography.button,\r\n    backgroundColor: theme.palette.background.paper,\r\n    padding: theme.spacing(1),\r\n  },\r\n    formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n    width: '100%',\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nexport default function TokenizacaoPanel({configToken, callbackLoadData}) {\r\n\r\n  const classes = useStyles();\r\n  const intl = useIntl();\r\n\r\n  const [configs, setConfigs] = React.useState(configToken);\r\n\r\n  useEffect(()=>{\r\n    setConfigs({...configToken})\r\n  },[configToken])\r\n\r\n  const handleUpdConfig = (key, value) => {\r\n    let newConfigs = configs;\r\n    newConfigs[key] = value;\r\n    callbackLoadData(newConfigs)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className={classes.labelUp}>\r\n        <Typography variant=\"h5\" gutterBottom>\r\n          <FormattedMessage id=\"app.tokenizerTitle\" />\r\n        </Typography>\r\n      </div>\r\n      <Grid container spacing={1}>\r\n        <Grid item xs={2}>\r\n          <FormattedMessage id=\"app.tokenizerRegexLabel\" />\r\n        </Grid>\r\n        <Grid item xs={4}>\r\n          <TextField \r\n            className={classes.formControl}\r\n            inputProps={{ \r\n              form: {autocomplete: 'off'}, \r\n            }}\r\n            value={configs.divider || ''}\r\n            onChange={(event) => handleUpdConfig('divider', event.target.value)}\r\n            id=\"outlined-basic\" \r\n            label=\"\" \r\n            variant=\"outlined\" />\r\n        </Grid>\r\n        <Grid item xs={2}>\r\n          <FormattedMessage id=\"app.tokenizerNGramsLabel\" />\r\n        </Grid>\r\n        <Grid item xs={4}>\r\n          <TextField  \r\n            className={classes.formControl}\r\n            inputProps={{ \r\n              form: {autocomplete: 'off'}, \r\n            }}\r\n            value={configs.ngrams}\r\n            onChange={(event) => handleUpdConfig('ngrams', event.target.value)}\r\n            id=\"outlined-basic\" \r\n            label=\"\" \r\n            variant=\"outlined\" />\r\n        </Grid>\r\n        <Grid item xs={2}>\r\n          <FormattedMessage id=\"app.tokenizerCaseLabel\" />\r\n        </Grid>\r\n        <Grid item xs={4}>\r\n         <FormControl variant=\"outlined\" className={classes.formControl}>\r\n          <Select\r\n            native\r\n            value={configs.case}\r\n            onChange={(event) => handleUpdConfig('case', event.target.value)}\r\n            label=\"Case\"\r\n          >\r\n            <option aria-label=\"None\" value=\"\" />\r\n            <option value='upper'>\r\n              {intl.formatMessage({id:\"app.tokenizerCaseUpperLabel\"})}\r\n            </option>\r\n            <option value='lower'>\r\n              {intl.formatMessage({id:\"app.tokenizerCaseLowerLabel\"})}\r\n            </option>\r\n          </Select>\r\n        </FormControl>\r\n        </Grid>\r\n        <Grid item xs={2}>\r\n          <FormattedMessage id=\"app.tokenizerMinLengthLabel\" />\r\n        </Grid>\r\n        <Grid item xs={4}>\r\n          <TextField  \r\n            className={classes.formControl}\r\n            inputProps={{ \r\n              form: {autocomplete: 'off'}, \r\n            }}\r\n            value={configs.minLength}\r\n            onChange={(event) => handleUpdConfig('minLength', event.target.value)}\r\n            id=\"outlined-basic\" \r\n            label=\"\" \r\n            variant=\"outlined\" />\r\n        </Grid>\r\n        <Grid item xs={2}>\r\n          <FormattedMessage id=\"app.tokenizerStopWordsLabel\" />\r\n        </Grid>\r\n        <Grid item xs={4}>\r\n          <TextField \r\n            onChange={(event) => handleUpdConfig('stopWords', event.target.value)}\r\n            label=\"\" \r\n            type=\"text\"\r\n            fullWidth\r\n            value={configs.stopWords}\r\n            variant=\"outlined\"\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  )\r\n}","\r\nimport React from \"react\";\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {\r\n  Grid,\r\n  Button,\r\n  Input,\r\n  InputAdornment,\r\n  TextField,\r\n  Checkbox,\r\n  FilledInput,\r\n  Slider,\r\n  Select\r\n} from \"@material-ui/core\";\r\n\r\nimport {sendDownload} from '../../services/Content/File';\r\nimport { FormattedMessage, useIntl } from 'react-intl';\r\nimport { DateTimePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\r\nimport ptLocale from \"date-fns/locale/pt-BR\";\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  labelUp: {\r\n    ...theme.typography.button,\r\n    backgroundColor: theme.palette.background.paper,\r\n    padding: theme.spacing(1),\r\n  },\r\n  input: {\r\n    width: 42,\r\n  },\r\n}));\r\n\r\n\r\nexport default function FilteringAndSetPanel({\r\n  cardsSource, \r\n  configInput,\r\n  tree,\r\n  setTree,\r\n  tree2,\r\n  setTree2,\r\n  setConfigFilterCallback\r\n}) {\r\n\r\n  const intl = useIntl();\r\n  const classes = useStyles();\r\n  const [checkedTypes, setCheckedTypes] = React.useState([false, false, false, false]);\r\n  const [percentTrain, setPercentTrain] = React.useState(configInput.percentTrain);\r\n\r\n  const renderSelectTypes = () => {\r\n    let types = [];\r\n\r\n    cardsSource.forEach((item, index) => {\r\n      if(item.get('status') !== 'new' && item.get('category') && item.get('active')){\r\n        for(let a in types){\r\n          if(types[a] === item.get('category')){\r\n            return false;\r\n          }\r\n        }\r\n        types.push(item.get('category'));\r\n      }\r\n    });\r\n    \r\n     return types.map((type, index) => <FormControlLabel key={\"checkfilter\"+index}\r\n        control={<Checkbox \r\n          checked={checkedTypes[index]} \r\n          onChange={() => handleTypeCheck(index)} \r\n          name=\"checkedA\" />}\r\n        label={type}\r\n      />);\r\n  }\r\n\r\n  const renderSimilarityCheck = () => {\r\n    let options = cardsSource.map((item, index) => {\r\n      if(item.get('status') !== 'new'){\r\n        return <option aria-label=\"content\" value={item.get('id')} key={'comparisonOption'+index}>\r\n          {item.get('name')+ '- '+item.get('id')}\r\n        </option>\r\n      }\r\n      return '';\r\n    });\r\n    \r\n    return <Select\r\n            native\r\n            value={configInput.targetCardForComparison}\r\n            onChange={(event) => handleUpdConfig('targetCardForComparison', event.target.value)}\r\n            label=\"targetCardForComparison\"\r\n          >\r\n            <option aria-label=\"\" value=\"\" key={'comparisonOption00'}>\r\n              {/* {intl.formatMessage({id:\"app.FilterAndSetFieldContent\"})} */}\r\n              Não quero comprar fontes\r\n            </option>\r\n            {options}\r\n          </Select>\r\n  }\r\n  const delModelTree = () => {\r\n    setTree({})\r\n  }\r\n\r\n  const downloadModelTree = async () => {\r\n    const name = '2 Models Tree Div='+tree.modelTree.percentTrain+'% '+tree.modelTree.date;\r\n    const format = {\r\n      \"modelTree\": tree,\r\n      \"modelTree2\": tree2\r\n    };\r\n\r\n    await sendDownload(name+'.json', format);\r\n  }\r\n\r\n  const handleTypeCheck = (index) => {\r\n    let newTypes = [...checkedTypes]\r\n    newTypes[index] = !newTypes[index]; \r\n    setCheckedTypes(newTypes)\r\n  }\r\n\r\n  const handleUpdConfig = (key, value) => {\r\n    let newConfigs = {...configInput};\r\n    newConfigs[key] = value;\r\n    setConfigFilterCallback(newConfigs)\r\n  }\r\n\r\n  const handleBlur = () => {\r\n    handleUpdConfig('percentTrain', percentTrain);\r\n    // if (percentTrain < 0) {\r\n    //   setPercentTrain(0);\r\n    // } else if (percentTrain > 100) {\r\n    //   setPercentTrain(100);\r\n    // }\r\n  };\r\n  const handleSliderChange = (event, newValue) => {\r\n    setPercentTrain(newValue);\r\n  };\r\n\r\n  const handleInputChange = (event) => {\r\n    setPercentTrain(event.target.value === '' ? '' : Number(event.target.value));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className={classes.labelUp}>\r\n        <Typography variant=\"h5\" gutterBottom>\r\n          <FormattedMessage id=\"app.FilterAndSetTitle\" />\r\n        </Typography>\r\n      </div>\r\n      <Grid container spacing={1}>\r\n        <Grid item xs={4}>\r\n          <Typography variant=\"h6\" gutterBottom>\r\n            Intervalo de tempo\r\n          </Typography>\r\n          <Grid container spacing={1}>\r\n            <Grid item xs={6}>\r\n              <MuiPickersUtilsProvider utils={DateFnsUtils} locale={ptLocale}>\r\n                <DateTimePicker\r\n                  label=\"Início\"\r\n                  clearable\r\n                  inputVariant=\"outlined\"\r\n                  value={configInput?.minDate}\r\n                  onChange={(event) => handleUpdConfig('minDate', event)}\r\n                  inputProps={{ \r\n                    form: {autocomplete: 'off'}, \r\n                  }}\r\n                />\r\n              </MuiPickersUtilsProvider>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <MuiPickersUtilsProvider utils={DateFnsUtils} locale={ptLocale}>\r\n                <DateTimePicker\r\n                  label=\"Fim\"\r\n                  clearable\r\n                  inputVariant=\"outlined\"\r\n                  value={configInput?.maxDate}\r\n                  onChange={(event) => handleUpdConfig('maxDate', event)}\r\n                  inputProps={{ \r\n                    form: {autocomplete: 'off'}, \r\n                  }}\r\n                />\r\n              </MuiPickersUtilsProvider>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item xs={4}>\r\n          <Typography variant=\"h6\" gutterBottom>\r\n            Tipos de conteúdo permitidos\r\n          </Typography>\r\n          <Grid item xs={12}>\r\n            {renderSelectTypes()}\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item xs={4}>\r\n          <Typography variant=\"h6\" gutterBottom>\r\n            Mínimo de itens no card (0 = sem limite)\r\n          </Typography>\r\n            <TextField \r\n              onChange={(event) => handleUpdConfig('minItemPerCard', event.target.value)}\r\n              id=\"demo-helper-text-aligned-no-helper\" \r\n              label=\"\" \r\n              type=\"number\"\r\n              // fullWidth\r\n              value={configInput?.minItemPerCard}\r\n              inputProps={{ \r\n                  form: {autocomplete: 'off'}, \r\n                  inputMode: 'numeric', \r\n                  pattern: '[0-9]*' \r\n                }}\r\n              variant=\"outlined\"\r\n            />\r\n        </Grid>\r\n        <Grid item xs={4}>\r\n          <Typography variant=\"h6\" gutterBottom>\r\n            Campo usado para processamento\r\n          </Typography>\r\n          <Select\r\n            native\r\n            value={configInput.targetField}\r\n            onChange={(event) => handleUpdConfig('targetField', event.target.value)}\r\n            label=\"targetField\"\r\n          >\r\n            <option aria-label=\"content\" value=\"content\">\r\n              {intl.formatMessage({id:\"app.FilterAndSetFieldContent\"})}\r\n            </option>\r\n            <option aria-label=\"title\" value=\"title\">\r\n              {intl.formatMessage({id:\"app.FilterAndSetFieldTitle\"})}\r\n            </option>\r\n          </Select>\r\n        </Grid>\r\n        <Grid item xs={4}>\r\n          <Typography variant=\"h6\" gutterBottom>\r\n            Fonte usada para comparação\r\n          </Typography>\r\n          <Grid item xs={12}>\r\n            {renderSimilarityCheck()}\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item xs={4}>\r\n          <Typography variant=\"h6\" gutterBottom>\r\n            Termo usado para montar a estrutura da segunda árvore\r\n          </Typography>\r\n          <Grid item xs={12}>\r\n            <TextField \r\n              onChange={(event) => handleUpdConfig('termSecondTree', event.target.value)}\r\n              label=\"\" \r\n              type=\"text\"\r\n              fullWidth\r\n              value={configInput.termSecondTree}\r\n              variant=\"outlined\"\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item xs={4}>\r\n          <Typography variant=\"h6\" gutterBottom>\r\n            Valor de corte de importância geral\r\n          </Typography>\r\n          <Grid item xs={12}>\r\n            <FilledInput \r\n              onChange={(event) => handleUpdConfig('idfCut', event.target.value)}\r\n              label=\"\" \r\n              type=\"number\"\r\n              // fullWidth\r\n              value={configInput?.idfCut}\r\n              endAdornment={<InputAdornment position=\"end\">%</InputAdornment>}\r\n              inputProps={{ \r\n                form: {autocomplete: 'off'}, \r\n                inputMode: 'numeric',\r\n                max: 100,\r\n                min: 0,\r\n                pattern: '[0-9]*' \r\n              }}\r\n              variant=\"outlined\"\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item xs={4}>\r\n          <Typography variant=\"h6\" gutterBottom>\r\n            Valor de corte para árvore\r\n          </Typography>\r\n          <Grid item xs={12}>\r\n            <FilledInput \r\n              onChange={(event) => handleUpdConfig('treeCut', event.target.value)}\r\n              label=\"\" \r\n              type=\"number\"\r\n              // fullWidth\r\n              value={configInput?.treeCut}\r\n              endAdornment={<InputAdornment position=\"end\">%</InputAdornment>}\r\n              inputProps={{ \r\n                form: {autocomplete: 'off'}, \r\n                inputMode: 'numeric',\r\n                max: 100,\r\n                min: 0,\r\n                pattern: '[0-9]*' \r\n              }}\r\n              variant=\"outlined\"\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item xs={4}>\r\n          <Typography variant=\"h6\" gutterBottom>\r\n            Modelo de Árvore\r\n          </Typography>\r\n          <Grid item xs={12}>\r\n            {Object.keys(tree).length > 0  ? \r\n              <React.Fragment>\r\n                {Object.keys(tree).length > 0 && <div> \r\n                  T1 Acc={tree.accuracy.toString().substr(0,6)}\r\n                  |Div={tree.modelTree.percentTrain}% \r\n                  <br/>\r\n                  {tree.modelTree.date}\r\n                </div>\r\n                }\r\n                {Object.keys(tree2).length > 0 && <div> \r\n                    T2 Acc={tree2.accuracy.toString().substr(0,6)}\r\n                    |Div={tree2.modelTree.percentTrain}% \r\n                    <br/>\r\n                    {tree2.modelTree.date}\r\n                  </div>\r\n                }\r\n\r\n                <Button variant=\"outlined\" \r\n                  onClick={delModelTree}\r\n                  style={{ margin: '0 5px', color:'red' }}>\r\n                    Del\r\n                </Button>\r\n                <Button variant=\"outlined\" \r\n                  onClick={downloadModelTree}\r\n                  style={{ margin: '0 5px' }}>\r\n                    Download\r\n                </Button>\r\n              </React.Fragment> \r\n              :\r\n              <React.Fragment>\r\n                Vazio\r\n                <Grid container spacing={2} alignItems=\"center\">\r\n                  <Grid item xs={12}>\r\n                    Porcentagem de Treinamento\r\n                  </Grid>\r\n                  <Grid item xs>\r\n                    <Slider\r\n                      value={typeof percentTrain === 'number' ? percentTrain : 0}\r\n                      onChange={handleSliderChange}\r\n                      // onBlur={handleBlur}\r\n                      onChangeCommitted={handleBlur}\r\n                      aria-labelledby=\"input-slider\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item>\r\n                    <Input\r\n                      className={classes.input}\r\n                      value={percentTrain}\r\n                      margin=\"dense\"\r\n                      onChange={handleInputChange}\r\n                      onBlur={handleBlur}\r\n                      inputProps={{\r\n                        step: 10,\r\n                        min: 0,\r\n                        max: 100,\r\n                        type: 'number',\r\n                        'aria-labelledby': 'input-slider',\r\n                      }}\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n              </React.Fragment>\r\n            }\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  )\r\n}","import React, { useState, useEffect } from 'react';\nimport MainHeader from '../../components/header/MainHeader.jsx';\nimport SourceContents from '../../components/download/SourceContents.jsx';\n\nimport CalcPanel from '../../components/panel/CalcPanel.jsx';\nimport ConfigPanel from '../../components/panel/ConfigPanel.jsx';\nimport TokenizacaoPanel from '../../components/panel/TokenizacaoPanel.jsx';\nimport FilteringAndSetPanel from '../../components/panel/FilteringAndSetPanel.jsx';\n\nimport SourceEntity from '../../entities/SourceEntity'\n\nimport {\n    Divider\n} from \"@material-ui/core\";\n\nexport default function Home({setResults}) {\n\n  const [cardsSource, setCardsSource] = useState([\n    new SourceEntity(),\n  ]);\n\n  const [configFilter, setConfigFilter] = useState({\n    'rssHostDownload1': 'https://api.rss2json.com/v1/api.json',\n    'rssHostParam1'   : 'rss_url',\n    'minItemPerCard'   : 1,\n    'minCharsPerItem'   : 0,\n    'minDate'   : null,\n    'maxDate'   : null,\n    'targetField' : 'content',\n    'targetCardForComparison' : '',\n    'termSecondTree' : '',\n    'idfCut' : 5,\n    'treeCut' : 0,\n    'percentTrain' : 50\n  });\n\n  const [configToken, setConfigToken] = useState({\n    'divider' : '[-.,;!?\\\\\\(\\)\\\"\\' ]',\n    'ngrams' : 1,\n    'minLength' : 2,\n    'case' : 'lower',\n    'stopWords' : 'de,em,os',\n  });\n\n  const [modelTree, setModelTree] = useState({});\n  const [modelTree2, setModelTree2] = useState({});\n\n  const setConfigFilterCallback = (newConfig) => {\n    setConfigFilter(newConfig)\n  }\n\n  const setCardsSourceCallback = (objCollection) => {\n\n    let newArray = [...objCollection];\n\n    if(newArray.length === 0 || newArray[newArray.length - 1].get('status') !== 'new'){\n      newArray.push(new SourceEntity());\n    }\n\n    setCardsSource(newArray)\n  }\n\n  const setConfigTokenCallback = (data) => {\n    setConfigToken(data)\n  }\n\n  return (\n    <div>\n      <MainHeader/>\n\n      <SourceContents cardsInput={cardsSource} setCardsInput={setCardsSourceCallback}/>\n\n      <Divider variant=\"middle\" />\n\n      <div style={{ backgroundColor: '#D4F1F4'}}>\n        <ConfigPanel \n          configInput={configFilter}\n          modelTree={modelTree}\n          modelTree2={modelTree2}\n          setModelTree={setModelTree}\n          setModelTree2={setModelTree2}\n          cardsInput={cardsSource} \n          configToken={configToken}\n          setConfigFilterCallback={setConfigFilterCallback} \n          setCardsSourceCallback={setCardsSourceCallback}\n          setConfigTokenCallback={setConfigTokenCallback}\n          />\n      </div>\n      <Divider variant=\"middle\" />\n\n      <TokenizacaoPanel \n        configToken={configToken} \n        callbackLoadData={setConfigTokenCallback}/>\n\n      <Divider variant=\"middle\" />\n\n      <FilteringAndSetPanel \n        cardsSource={cardsSource} \n        configInput={configFilter}\n        setConfigFilterCallback={setConfigFilterCallback} \n        tree={modelTree}\n        setTree={setModelTree}\n        tree2={modelTree2}\n        setTree2={setModelTree2}\n        />\n\n      <Divider variant=\"middle\" />\n\n      <div style={{ backgroundColor: '#75E6DA'}}>\n        <CalcPanel \n          modelTree={modelTree}\n          modelTree2={modelTree2}\n          setModelTree={setModelTree}\n          setModelTree2={setModelTree2}\n          cardsInput={cardsSource} \n          configToken={configToken}\n          configFilter={configFilter}\n          setResults={setResults}\n        />\n      </div>\n    </div>\n  )\n}","import React from \"react\";\r\nimport Plot from 'react-plotly.js';\r\nimport randomColor from \"randomcolor/randomColor\";\r\n\r\nexport default function PlotByWeek({ plotDataWeek }) {\r\n\r\n  const plotTfIdfByWeek = () => {\r\n\r\n    let dataToPlot = [];\r\n    let months = ['Seg', 'Ter', 'Qua', 'Qui', 'Sex', 'Sab', 'Dom']\r\n    let daysColors = {'Seg':'yellow', 'Ter':'black', 'Qua':'purple', 'Qui':'red', 'Sex':'green', 'Sab':'pink', 'Dom':'blue'}\r\n\r\n    months.forEach((item, index) => {\r\n      plotDataWeek[index] && plotDataWeek[index].forEach((itemDay) => {\r\n        dataToPlot.push({\r\n          x: [months[index]],\r\n          y: [itemDay['value']],\r\n          type: 'bar',\r\n          name: itemDay['term'],\r\n          marker: {color: randomColor({luminosity: 'dark', hue: daysColors[months[index]]})},\r\n        })\r\n      })\r\n    })\r\n\r\n    return <Plot\r\n        data={dataToPlot}\r\n        style={{width: \"100%\", height: \"100%\"}}\r\n        layout={ {\r\n          barmode:\"group\",\r\n          bargap :0.2,\r\n          bargroupgap: 0.1,\r\n          title: 'Melhores por dia da semana'\r\n        } }\r\n      />\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {plotTfIdfByWeek(plotDataWeek)}\r\n    </div>\r\n  )\r\n}","import React from \"react\";\r\nimport Plot from 'react-plotly.js';\r\n\r\nimport randomColor from \"randomcolor/randomColor\";\r\n\r\nexport default function plotDataHours({ plotDataHours }) {\r\n\r\n  const plotTfIdfByHours = () => {\r\n\r\n    let axis_x = Object.keys(plotDataHours);\r\n    let dataToPlot = [];\r\n\r\n    axis_x.forEach((hour) => {\r\n      if(plotDataHours[hour]){\r\n        let array = plotDataHours[hour];\r\n        array.sort((a,b)=> a['value'] - b['value']);\r\n        array.forEach(\r\n        (itemDay, indexDay) => {\r\n\r\n          dataToPlot.push({\r\n            x: [hour+\"h\"],\r\n            y: [itemDay['value']],\r\n            type: 'bar',\r\n            name: itemDay['term'],\r\n            marker: {color: randomColor({\r\n              luminosity: 'dark',\r\n              seed : indexDay,\r\n            })},\r\n          })\r\n        })\r\n      }\r\n    })\r\n\r\n    return <Plot\r\n        data={dataToPlot}\r\n        style={{width: \"100%\", height: \"100%\"}}\r\n        config={{responsive: true}}\r\n        layout={ {\r\n          xaxis : { tickangle: -45},\r\n          barmode: 'group',\r\n          bargap :0.2,\r\n          bargroupgap: 0.1,\r\n            line: {\r\n          width: 2.5,\r\n          margin: 1\r\n      },\r\n          yaxis: {\r\n            zeroline: true,\r\n          },\r\n          title: 'Melhores por Horário',\r\n        } }\r\n      />\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {plotTfIdfByHours()}\r\n    </div>\r\n  )\r\n}","import React from \"react\";\r\nimport Plot from 'react-plotly.js';\r\n\r\nexport default function TfIdfByAll({ plotDataAll }) {\r\n\r\n  const plotTfIdfByAll = () => {\r\n\r\n    let axis_x = plotDataAll.map(item => item['term']);\r\n    let axis_y = plotDataAll.map(item => item['value']);\r\n\r\n    let dataToPlot = [\r\n      {\r\n        x : axis_x, \r\n        y : axis_y,\r\n        mode: 'lines+markers',\r\n        marker: {color: 'red'},\r\n      }\r\n    ];\r\n\r\n    return <Plot\r\n        data={dataToPlot}\r\n        style={{width: \"100%\", height: \"100%\"}}\r\n        useResizeHandler={true}\r\n        layout={ {\r\n          title: 'Mais bem avaliados'\r\n        } }\r\n      />\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {plotTfIdfByAll()}\r\n    </div>\r\n  )\r\n}","import React from \"react\";\r\nimport Plot from 'react-plotly.js';\r\n\r\nconst colorsHourPie = [\r\n  'rgb(58, 46, 125)', //1 \r\n  'rgb(90, 78, 156)', //2\r\n  'rgb(39, 13, 181)', //3\r\n  'rgb(13, 114, 181)', //4\r\n  'rgb(0, 133, 173)', //5\r\n  'rgb(11, 141, 212)', //6\r\n  'rgb(145, 212, 11)', //7\r\n  'rgb(205, 212, 11)', //8\r\n  'rgb(237, 213, 59)', //9\r\n  'rgb(255, 246, 84)', //10\r\n  'rgb(255, 237, 145)',//11\r\n  'rgb(209, 188, 77)', //12\r\n  'rgb(245, 208, 15)', //13\r\n  'rgb(252, 206, 106)', //14\r\n  'rgb(252, 204, 144)', //15\r\n  'rgb(255, 151, 23)', //16\r\n  'rgb(201, 111, 0)', //17\r\n  'rgb(201, 74, 0)', //18\r\n  'rgb(115, 27, 0)', //19\r\n  'rgb(110, 0, 35)', //20\r\n  'rgb(110, 0, 82)', //21\r\n  'rgb(110, 1, 88)', //22\r\n  'rgb(121, 2, 212)', //23\r\n  'rgb(63, 1, 110)', //00\r\n];\r\n\r\nexport default function PostTime({ plotDataPosttTime }) {\r\n\r\n  function ksort(obj) {\r\n    if (!obj || typeof (obj) != 'object') {\r\n      return [];\r\n    }\r\n    var keys = [], values = [];\r\n\r\n    for (let a in obj) {\r\n      keys.push(a);\r\n    }\r\n\r\n    keys = keys.reverse();\r\n\r\n    for (let i = 0; i < keys.length; i++) {\r\n      values.push(obj[keys[i]]);\r\n    }\r\n\r\n    return [keys, values];\r\n  }\r\n\r\n  const plotPostTime = () => {\r\n\r\n    let [labels, values] = ksort(plotDataPosttTime);\r\n\r\n    for(let a in labels){\r\n      labels[a] = labels[a]+'h';\r\n    }\r\n\r\n    let dataToPlot = [\r\n      {\r\n        values : values, \r\n        labels : labels,\r\n        type: 'pie',\r\n        hole: .2,\r\n        mode: 'label+percent+name',\r\n        textinfo: \"label+value+percent\",\r\n        textposition: \"inside\",\r\n        automargin: false,\r\n        marker: {colors: colorsHourPie},\r\n      }\r\n    ];\r\n\r\n    return <Plot\r\n        data={dataToPlot}\r\n        style={{width: \"100%\", height: \"100%\"}}\r\n        useResizeHandler={false}\r\n        layout={ {\r\n          title: 'Horários com mais publicações',\r\n          showlegend: true,\r\n        } }\r\n      />\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {plotPostTime()}\r\n    </div>\r\n  )\r\n}","import React from \"react\";\r\nimport Plot from 'react-plotly.js';\r\nimport randomColor from \"randomcolor/randomColor\";\r\n\r\nexport default function PlotComparison({ similarityList }) {\r\n\r\n  const showComparison = () => {\r\n\r\n    if(!similarityList){\r\n      return '';\r\n    }\r\n\r\n    let axis_x = [];\r\n    let axis_y = [];\r\n\r\n    for(let idCard in similarityList){\r\n      axis_x.push(idCard);\r\n      axis_y.push(similarityList[idCard]['mean']);\r\n    }\r\n\r\n    let dataToPlot = [\r\n      {\r\n        x : axis_x, \r\n        y : axis_y,\r\n        type: 'bar',\r\n        mode: 'lines+markers',\r\n        marker: {color: randomColor()},\r\n      }\r\n    ];\r\n\r\n    return <Plot\r\n        data={dataToPlot}\r\n        style={{width: \"100%\", height: \"100%\"}}\r\n        useResizeHandler={true}\r\n        layout={ {title: 'Fontes com conteúdo mais similaridades'} }\r\n      />\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {showComparison()}\r\n    </div>\r\n  )\r\n}","import React from \"react\";\r\nimport { Tree, TreeNode } from 'react-organizational-chart';\r\n\r\nexport default function PlotTree({ dataToPlot }) {\r\n\r\n  console.log(1)\r\n  const makeTree = () => {\r\n    // let dataToPlot = {modelTree : calcDataTree_default_simple()};\r\n    // let dataToPlot = {modelTree : calcDataTree_default_double()};\r\n    // let dataToPlot = {modelTree : calcDataTree_default_string()};\r\n\r\n    return printNode(dataToPlot?.modelTree?.model)\r\n  }\r\n\r\n  const printNode = (node, indexParent = 0) => {\r\n\r\n    return node?.vals ? \r\n      node.vals.map(\r\n        (item, index)=>{\r\n          return  item?.name ? <TreeNode \r\n            key={'nodeTree'+indexParent+'-'+index} \r\n            label={<div>{item?.name}</div>}>\r\n              {printNode(item?.child, indexParent+'-'+index)}\r\n          </TreeNode>\r\n          :\r\n            printNode(item?.child, indexParent+'-'+index)\r\n        })\r\n      :\r\n      ( typeof node?.val !=  'boolean' ?\r\n          <TreeNode \r\n            key={'nodeTree'+indexParent+'--'}\r\n            label={<div>{node?.val}</div>}>\r\n          </TreeNode>\r\n          :\r\n          <></>\r\n      )\r\n  }\r\n\r\n  return (\r\n    <Tree label={<div>Root</div>}>\r\n      {makeTree()}\r\n    </Tree>\r\n  )\r\n}","import React from \"react\";\r\n\r\nimport {\r\n  Grid\r\n} from \"@material-ui/core\";\r\n\r\nimport PlotByWeek from '../charts/ByWeek';\r\nimport PlotDataHours from '../charts/DataHours';\r\nimport PlotTfIdfByAll from '../charts/TfIdfByAll';\r\nimport PlotPostTime from '../charts/PostTime';\r\nimport PlotComparison from '../charts/Comparison';\r\nimport PlotTree from '../charts/Tree';\r\n\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nexport default function ResultsPanel({ \r\n  results,\r\n}) {\r\n\r\n  return (\r\n    <div>\r\n      <div id=\"linear\">\r\n        <div className=\"chart\"></div>\r\n        <div className=\"status\"></div>\r\n        <div id=\"modelInspectionOutput\">\r\n          <p id=\"inspectionHeadline\"></p>\r\n          <table id=\"myTable\"></table>\r\n        </div>\r\n      </div>\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12}>\r\n          Quantas palavras geradas : {results?.countWordsGenerated}\r\n          <br />\r\n          Quantas palavras apresentadas : {results?.countWordsUsed}\r\n          <br />\r\n          Quantos documentos analisados : {results?.countDocuments}\r\n          <br />\r\n          Quantas fontes analisadas : {results?.countFonts}\r\n          <br />\r\n          Quantos termos únicos usados na árvore : {results?.countWordsUsedTree}\r\n        </Grid>\r\n        <Grid item xs={12} style={{overflow:'auto'}}>\r\n          <Typography variant=\"h6\" gutterBottom>\r\n            Árvore 1\r\n          </Typography>\r\n          <PlotTree dataToPlot={results?.modelTree} />\r\n        </Grid>\r\n\r\n        <Grid item xs={12} style={{overflow:'auto'}}>\r\n          <Typography variant=\"h6\" gutterBottom>\r\n            Árvore 2\r\n          </Typography>\r\n          <PlotTree dataToPlot={results?.modelTree2} />\r\n        </Grid>\r\n\r\n        <Grid item xs={12}>\r\n          <PlotComparison similarityList={results?.similarityList} />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <PlotPostTime plotDataPosttTime={results?.plotDataPostTime} />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <PlotTfIdfByAll plotDataAll={results?.plotDataAll} />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <PlotByWeek plotDataWeek={results?.plotDataWeek} />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <PlotDataHours plotDataHours={results?.plotDataHours} />\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  )\r\n}","import './App.css';\nimport Home from './pages/index/Home.jsx';\nimport React, { useState, useEffect } from 'react';\nimport ResultsPanel from './components/panel/ResultsPanel.jsx';\n\nfunction App() {\n\n  const [results, setResults] = useState({\n      modelTree          : {},\n      modelTree2         : {},\n      calcDataTree       : [],\n      calcDataTree2      : [],\n      countWordsUsedTree : 0,\n      countWordsGenerated: 0,\n      countWordsUsed     : 0,\n      countDocuments     : 0,\n      countFonts         : 0,\n      plotDataPostTime   : [],\n      plotDataWeek       : [],\n      plotDataHours      : [],\n      plotDataHours      : [],\n      plotDataAll        : [],\n  });\n\n  return (\n    <div className=\"App\">\n      <Home setResults={setResults}/>\n      \n      <div style={{ backgroundColor: 'rgb(207 229 227)'}}>\n        <ResultsPanel \n          results={results}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport {IntlProvider} from 'react-intl';\n\n// import lang_en from './i18n/lang/en.json';\nimport lang_pt_BR from './i18n/lang/pt-BR.json';\n\nconst locale = navigator.language;\n\nReactDOM.render(\n  <React.StrictMode>\n    <IntlProvider locale ={locale} messages={lang_pt_BR}>\n    <App />\n    </IntlProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}